{
  "version": 3,
  "sources": ["../../@base-ui-components/react/esm/input/Input.js", "../../@base-ui-components/react/esm/field/index.parts.js", "../../@base-ui-components/react/esm/field/root/FieldRoot.js", "../../@base-ui-components/react/esm/fieldset/root/FieldsetRootContext.js", "../../@base-ui-components/react/esm/field/label/FieldLabel.js", "../../@base-ui-components/react/esm/field/error/FieldError.js", "../../@base-ui-components/react/esm/field/description/FieldDescription.js", "../../@base-ui-components/react/esm/field/control/FieldControl.js", "../../@base-ui-components/react/esm/field/validity/FieldValidity.js"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport { Field } from \"../field/index.js\";\n\n/**\n * A native input element that automatically works with [Field](https://base-ui.com/react/components/field).\n * Renders an `<input>` element.\n *\n * Documentation: [Base UI Input](https://base-ui.com/react/components/input)\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const Input = /*#__PURE__*/React.forwardRef(function Input(props, forwardedRef) {\n  return /*#__PURE__*/_jsx(Field.Control, {\n    ref: forwardedRef,\n    ...props\n  });\n});\nif (process.env.NODE_ENV !== \"production\") Input.displayName = \"Input\";", "export { FieldRoot as Root } from \"./root/FieldRoot.js\";\nexport { FieldLabel as Label } from \"./label/FieldLabel.js\";\nexport { FieldError as Error } from \"./error/FieldError.js\";\nexport { FieldDescription as Description } from \"./description/FieldDescription.js\";\nexport { FieldControl as Control } from \"./control/FieldControl.js\";\nexport { FieldValidity as Validity } from \"./validity/FieldValidity.js\";", "'use client';\n\nimport * as React from 'react';\nimport { useEventCallback } from '@base-ui-components/utils/useEventCallback';\nimport { FieldRootContext } from \"./FieldRootContext.js\";\nimport { DEFAULT_VALIDITY_STATE, fieldValidityMapping } from \"../utils/constants.js\";\nimport { useFieldsetRootContext } from \"../../fieldset/root/FieldsetRootContext.js\";\nimport { useFormContext } from \"../../form/FormContext.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\n\n/**\n * Groups all parts of the field.\n * Renders a `<div>` element.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const FieldRoot = /*#__PURE__*/React.forwardRef(function FieldRoot(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    validate: validateProp,\n    validationDebounceTime = 0,\n    validationMode = 'onBlur',\n    name,\n    disabled: disabledProp = false,\n    invalid: invalidProp,\n    ...elementProps\n  } = componentProps;\n  const {\n    disabled: disabledFieldset\n  } = useFieldsetRootContext();\n  const {\n    errors\n  } = useFormContext();\n  const validate = useEventCallback(validateProp || (() => null));\n  const disabled = disabledFieldset || disabledProp;\n  const [controlId, setControlId] = React.useState(undefined);\n  const [labelId, setLabelId] = React.useState(undefined);\n  const [messageIds, setMessageIds] = React.useState([]);\n  const [touched, setTouched] = React.useState(false);\n  const [dirty, setDirtyUnwrapped] = React.useState(false);\n  const [filled, setFilled] = React.useState(false);\n  const [focused, setFocused] = React.useState(false);\n  const markedDirtyRef = React.useRef(false);\n  const setDirty = React.useCallback(value => {\n    if (value) {\n      markedDirtyRef.current = true;\n    }\n    setDirtyUnwrapped(value);\n  }, []);\n  const invalid = Boolean(invalidProp || name && {}.hasOwnProperty.call(errors, name) && errors[name] !== undefined);\n  const [validityData, setValidityData] = React.useState({\n    state: DEFAULT_VALIDITY_STATE,\n    error: '',\n    errors: [],\n    value: null,\n    initialValue: null\n  });\n  const valid = !invalid && validityData.state.valid;\n  const state = React.useMemo(() => ({\n    disabled,\n    touched,\n    dirty,\n    valid,\n    filled,\n    focused\n  }), [disabled, touched, dirty, valid, filled, focused]);\n  const contextValue = React.useMemo(() => ({\n    invalid,\n    controlId,\n    setControlId,\n    labelId,\n    setLabelId,\n    messageIds,\n    setMessageIds,\n    name,\n    validityData,\n    setValidityData,\n    disabled,\n    touched,\n    setTouched,\n    dirty,\n    setDirty,\n    filled,\n    setFilled,\n    focused,\n    setFocused,\n    validate,\n    validationMode,\n    validationDebounceTime,\n    state,\n    markedDirtyRef\n  }), [invalid, controlId, labelId, messageIds, name, validityData, disabled, touched, dirty, setDirty, filled, setFilled, focused, setFocused, validate, validationMode, validationDebounceTime, state]);\n  const element = useRenderElement('div', componentProps, {\n    ref: forwardedRef,\n    state,\n    props: elementProps,\n    customStyleHookMapping: fieldValidityMapping\n  });\n  return /*#__PURE__*/_jsx(FieldRootContext.Provider, {\n    value: contextValue,\n    children: element\n  });\n});\nif (process.env.NODE_ENV !== \"production\") FieldRoot.displayName = \"FieldRoot\";", "'use client';\n\nimport * as React from 'react';\nexport const FieldsetRootContext = /*#__PURE__*/React.createContext({\n  legendId: undefined,\n  setLegendId: () => {},\n  disabled: undefined\n});\nif (process.env.NODE_ENV !== \"production\") FieldsetRootContext.displayName = \"FieldsetRootContext\";\nexport function useFieldsetRootContext() {\n  return React.useContext(FieldsetRootContext);\n}", "'use client';\n\nimport * as React from 'react';\nimport { useIsoLayoutEffect } from '@base-ui-components/utils/useIsoLayoutEffect';\nimport { getTarget } from \"../../floating-ui-react/utils.js\";\nimport { useFieldRootContext } from \"../root/FieldRootContext.js\";\nimport { fieldValidityMapping } from \"../utils/constants.js\";\nimport { useBaseUiId } from \"../../utils/useBaseUiId.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\n\n/**\n * An accessible label that is automatically associated with the field control.\n * Renders a `<label>` element.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\nexport const FieldLabel = /*#__PURE__*/React.forwardRef(function FieldLabel(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    id: idProp,\n    ...elementProps\n  } = componentProps;\n  const {\n    labelId,\n    setLabelId,\n    state,\n    controlId\n  } = useFieldRootContext(false);\n  const id = useBaseUiId(idProp);\n  const htmlFor = controlId ?? undefined;\n  useIsoLayoutEffect(() => {\n    if (controlId != null || idProp) {\n      setLabelId(id);\n    }\n    return () => {\n      setLabelId(undefined);\n    };\n  }, [controlId, id, idProp, setLabelId]);\n  const element = useRenderElement('label', componentProps, {\n    ref: forwardedRef,\n    state,\n    props: [{\n      id: labelId,\n      htmlFor,\n      onMouseDown(event) {\n        const target = getTarget(event.nativeEvent);\n        if (target?.closest('button,input,select,textarea')) {\n          return;\n        }\n\n        // Prevent text selection when double clicking label.\n        if (!event.defaultPrevented && event.detail > 1) {\n          event.preventDefault();\n        }\n      }\n    }, elementProps],\n    customStyleHookMapping: fieldValidityMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") FieldLabel.displayName = \"FieldLabel\";", "'use client';\n\nimport * as React from 'react';\nimport { useIsoLayoutEffect } from '@base-ui-components/utils/useIsoLayoutEffect';\nimport { useFieldRootContext } from \"../root/FieldRootContext.js\";\nimport { fieldValidityMapping } from \"../utils/constants.js\";\nimport { useFormContext } from \"../../form/FormContext.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { useBaseUiId } from \"../../utils/useBaseUiId.js\";\n\n/**\n * An error message displayed if the field control fails validation.\n * Renders a `<div>` element.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\nexport const FieldError = /*#__PURE__*/React.forwardRef(function FieldError(componentProps, forwardedRef) {\n  const {\n    render,\n    id: idProp,\n    className,\n    match,\n    ...elementProps\n  } = componentProps;\n  const id = useBaseUiId(idProp);\n  const {\n    validityData,\n    state,\n    name,\n    setMessageIds\n  } = useFieldRootContext(false);\n  const {\n    errors\n  } = useFormContext();\n  const formError = name ? errors[name] : null;\n  let rendered = false;\n  if (formError || match === true) {\n    rendered = true;\n  } else if (match) {\n    rendered = Boolean(validityData.state[match]);\n  } else {\n    rendered = validityData.state.valid === false;\n  }\n  useIsoLayoutEffect(() => {\n    if (!rendered || !id) {\n      return undefined;\n    }\n    setMessageIds(v => v.concat(id));\n    return () => {\n      setMessageIds(v => v.filter(item => item !== id));\n    };\n  }, [rendered, id, setMessageIds]);\n  const element = useRenderElement('div', componentProps, {\n    ref: forwardedRef,\n    state,\n    props: [{\n      id,\n      children: formError || (validityData.errors.length > 1 ? /*#__PURE__*/React.createElement('ul', {}, validityData.errors.map(message => /*#__PURE__*/React.createElement('li', {\n        key: message\n      }, message))) : validityData.error)\n    }, elementProps],\n    customStyleHookMapping: fieldValidityMapping\n  });\n  if (!rendered) {\n    return null;\n  }\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") FieldError.displayName = \"FieldError\";", "'use client';\n\nimport * as React from 'react';\nimport { useIsoLayoutEffect } from '@base-ui-components/utils/useIsoLayoutEffect';\nimport { useFieldRootContext } from \"../root/FieldRootContext.js\";\nimport { fieldValidityMapping } from \"../utils/constants.js\";\nimport { useBaseUiId } from \"../../utils/useBaseUiId.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\n\n/**\n * A paragraph with additional information about the field.\n * Renders a `<p>` element.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\nexport const FieldDescription = /*#__PURE__*/React.forwardRef(function FieldDescription(componentProps, forwardedRef) {\n  const {\n    render,\n    id: idProp,\n    className,\n    ...elementProps\n  } = componentProps;\n  const {\n    state\n  } = useFieldRootContext(false);\n  const id = useBaseUiId(idProp);\n  const {\n    setMessageIds\n  } = useFieldRootContext();\n  useIsoLayoutEffect(() => {\n    if (!id) {\n      return undefined;\n    }\n    setMessageIds(v => v.concat(id));\n    return () => {\n      setMessageIds(v => v.filter(item => item !== id));\n    };\n  }, [id, setMessageIds]);\n  const element = useRenderElement('p', componentProps, {\n    ref: forwardedRef,\n    state,\n    props: [{\n      id\n    }, elementProps],\n    customStyleHookMapping: fieldValidityMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") FieldDescription.displayName = \"FieldDescription\";", "'use client';\n\nimport * as React from 'react';\nimport { useEventCallback } from '@base-ui-components/utils/useEventCallback';\nimport { useControlled } from '@base-ui-components/utils/useControlled';\nimport { useIsoLayoutEffect } from '@base-ui-components/utils/useIsoLayoutEffect';\nimport { useFieldRootContext } from \"../root/FieldRootContext.js\";\nimport { fieldValidityMapping } from \"../utils/constants.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { useField } from \"../useField.js\";\nimport { useBaseUiId } from \"../../utils/useBaseUiId.js\";\nimport { useFieldControlValidation } from \"./useFieldControlValidation.js\";\n\n/**\n * The form control to label and validate.\n * Renders an `<input>` element.\n *\n * You can omit this part and use any Base UI input component instead. For example,\n * [Input](https://base-ui.com/react/components/input), [Checkbox](https://base-ui.com/react/components/checkbox),\n * or [Select](https://base-ui.com/react/components/select), among others, will work with Field out of the box.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\nexport const FieldControl = /*#__PURE__*/React.forwardRef(function FieldControl(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    id: idProp,\n    name: nameProp,\n    value: valueProp,\n    disabled: disabledProp = false,\n    onValueChange,\n    defaultValue,\n    ...elementProps\n  } = componentProps;\n  const {\n    state: fieldState,\n    name: fieldName,\n    disabled: fieldDisabled\n  } = useFieldRootContext();\n  const disabled = fieldDisabled || disabledProp;\n  const name = fieldName ?? nameProp;\n  const state = React.useMemo(() => ({\n    ...fieldState,\n    disabled\n  }), [fieldState, disabled]);\n  const {\n    setControlId,\n    labelId,\n    setTouched,\n    setDirty,\n    validityData,\n    setFocused,\n    setFilled,\n    validationMode\n  } = useFieldRootContext();\n  const {\n    getValidationProps,\n    getInputValidationProps,\n    commitValidation,\n    inputRef\n  } = useFieldControlValidation();\n  const id = useBaseUiId(idProp);\n  useIsoLayoutEffect(() => {\n    setControlId(id);\n    return () => {\n      setControlId(undefined);\n    };\n  }, [id, setControlId]);\n  useIsoLayoutEffect(() => {\n    const hasExternalValue = valueProp != null;\n    if (inputRef.current?.value || hasExternalValue && valueProp !== '') {\n      setFilled(true);\n    } else if (hasExternalValue && valueProp === '') {\n      setFilled(false);\n    }\n  }, [inputRef, setFilled, valueProp]);\n  const [value, setValueUnwrapped] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'FieldControl',\n    state: 'value'\n  });\n  const setValue = useEventCallback((nextValue, event) => {\n    setValueUnwrapped(nextValue);\n    onValueChange?.(nextValue, event);\n  });\n  useField({\n    id,\n    name,\n    commitValidation,\n    value,\n    getValue: () => inputRef.current?.value,\n    controlRef: inputRef\n  });\n  const element = useRenderElement('input', componentProps, {\n    ref: forwardedRef,\n    state,\n    props: [{\n      id,\n      disabled,\n      name,\n      ref: inputRef,\n      'aria-labelledby': labelId,\n      value,\n      onChange(event) {\n        if (value != null) {\n          setValue(event.currentTarget.value, event.nativeEvent);\n        }\n        setDirty(event.currentTarget.value !== validityData.initialValue);\n        setFilled(event.currentTarget.value !== '');\n      },\n      onFocus() {\n        setFocused(true);\n      },\n      onBlur(event) {\n        setTouched(true);\n        setFocused(false);\n        if (validationMode === 'onBlur') {\n          commitValidation(event.currentTarget.value);\n        }\n      },\n      onKeyDown(event) {\n        if (event.currentTarget.tagName === 'INPUT' && event.key === 'Enter') {\n          setTouched(true);\n          commitValidation(event.currentTarget.value);\n        }\n      }\n    }, getValidationProps(), getInputValidationProps(), elementProps],\n    customStyleHookMapping: fieldValidityMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") FieldControl.displayName = \"FieldControl\";", "'use client';\n\nimport * as React from 'react';\nimport { useFieldRootContext } from \"../root/FieldRootContext.js\";\nimport { getCombinedFieldValidityData } from \"../utils/getCombinedFieldValidityData.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Used to display a custom message based on the field’s validity.\n * Requires `children` to be a function that accepts field validity state as an argument.\n *\n * Documentation: [Base UI Field](https://base-ui.com/react/components/field)\n */\nexport const FieldValidity = function FieldValidity(props) {\n  const {\n    children\n  } = props;\n  const {\n    validityData,\n    invalid\n  } = useFieldRootContext(false);\n  const fieldValidityState = React.useMemo(() => {\n    const combinedFieldValidityData = getCombinedFieldValidityData(validityData, invalid);\n    return {\n      ...combinedFieldValidityData,\n      validity: combinedFieldValidityData.state\n    };\n  }, [validityData, invalid]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: children(fieldValidityState)\n  });\n};\nif (process.env.NODE_ENV !== \"production\") FieldValidity.displayName = \"FieldValidity\";"],
  "mappings": "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",
  "names": ["React", "React", "FieldRoot", "_jsx", "React", "FieldLabel", "React", "FieldError", "React", "FieldDescription", "React", "FieldControl", "React", "import_jsx_runtime", "FieldValidity", "_jsx", "import_jsx_runtime", "Input", "_jsx"]
}
