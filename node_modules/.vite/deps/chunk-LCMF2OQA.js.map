{
  "version": 3,
  "sources": ["../../@base-ui-components/utils/esm/useEventCallback.js", "../../@base-ui-components/utils/esm/useRefWithInit.js", "../../@base-ui-components/react/esm/field/control/FieldControlDataAttributes.js", "../../@base-ui-components/react/esm/field/utils/constants.js", "../../@base-ui-components/react/esm/field/root/FieldRootContext.js", "../../@base-ui-components/react/esm/utils/noop.js", "../../@base-ui-components/react/esm/form/FormContext.js", "../../@base-ui-components/react/esm/utils/useRenderElement.js", "../../@base-ui-components/utils/esm/useMergedRefs.js", "../../@base-ui-components/utils/esm/reactVersion.js", "../../@base-ui-components/utils/esm/mergeObjects.js", "../../@base-ui-components/react/esm/utils/getStyleHookProps.js", "../../@base-ui-components/react/esm/utils/resolveClassName.js", "../../@base-ui-components/react/esm/merge-props/mergeProps.js", "../../@base-ui-components/react/esm/utils/constants.js", "../../@base-ui-components/utils/esm/useIsoLayoutEffect.js", "../../@floating-ui/utils/dist/floating-ui.utils.dom.mjs", "../../@base-ui-components/utils/esm/detectBrowser.js", "../../@base-ui-components/react/esm/floating-ui-react/utils/event.js", "../../@base-ui-components/react/esm/floating-ui-react/utils/element.js", "../../@floating-ui/utils/dist/floating-ui.utils.mjs", "../../tabbable/src/index.js", "../../@base-ui-components/utils/esm/useId.js", "../../@base-ui-components/utils/esm/safeReact.js", "../../@base-ui-components/react/esm/utils/useBaseUiId.js", "../../@base-ui-components/utils/esm/useControlled.js", "../../@base-ui-components/utils/esm/useLatestRef.js", "../../@base-ui-components/react/esm/field/useField.js", "../../@base-ui-components/react/esm/field/utils/getCombinedFieldValidityData.js", "../../@base-ui-components/utils/esm/useOnMount.js", "../../@base-ui-components/utils/esm/useTimeout.js", "../../@base-ui-components/react/esm/field/control/useFieldControlValidation.js"],
  "sourcesContent": ["'use client';\n\nimport * as React from 'react';\nimport { useRefWithInit } from \"./useRefWithInit.js\";\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nconst useInsertionEffect = React[`useInsertionEffect${Math.random().toFixed(1)}`.slice(0, -3)];\nconst useSafeInsertionEffect =\n// React 17 doesn't have useInsertionEffect.\nuseInsertionEffect &&\n// Preact replaces useInsertionEffect with useLayoutEffect and fires too late.\nuseInsertionEffect !== React.useLayoutEffect ? useInsertionEffect : fn => fn();\nexport function useEventCallback(callback) {\n  const stable = useRefWithInit(createStableCallback).current;\n  stable.next = callback;\n  useSafeInsertionEffect(stable.effect);\n  return stable.trampoline;\n}\nfunction createStableCallback() {\n  const stable = {\n    next: undefined,\n    callback: assertNotCalled,\n    trampoline: (...args) => stable.callback?.(...args),\n    effect: () => {\n      stable.callback = stable.next;\n    }\n  };\n  return stable;\n}\nfunction assertNotCalled() {\n  if (process.env.NODE_ENV !== 'production') {\n    throw new Error('Base UI: Cannot call an event handler while rendering.');\n  }\n}", "'use client';\n\nimport * as React from 'react';\nconst UNINITIALIZED = {};\n\n/**\n * A React.useRef() that is initialized with a function. Note that it accepts an optional\n * initialization argument, so the initialization function doesn't need to be an inline closure.\n *\n * @usage\n *   const ref = useRefWithInit(sortColumns, columns)\n */\n\nexport function useRefWithInit(init, initArg) {\n  const ref = React.useRef(UNINITIALIZED);\n  if (ref.current === UNINITIALIZED) {\n    ref.current = init(initArg);\n  }\n  return ref;\n}", "export let FieldControlDataAttributes = /*#__PURE__*/function (FieldControlDataAttributes) {\n  /**\n   * Present when the field is disabled.\n   */\n  FieldControlDataAttributes[\"disabled\"] = \"data-disabled\";\n  /**\n   * Present when the field is in valid state.\n   */\n  FieldControlDataAttributes[\"valid\"] = \"data-valid\";\n  /**\n   * Present when the field is in invalid state.\n   */\n  FieldControlDataAttributes[\"invalid\"] = \"data-invalid\";\n  /**\n   * Present when the field has been touched.\n   */\n  FieldControlDataAttributes[\"touched\"] = \"data-touched\";\n  /**\n   * Present when the field's value has changed.\n   */\n  FieldControlDataAttributes[\"dirty\"] = \"data-dirty\";\n  /**\n   * Present when the field is filled.\n   */\n  FieldControlDataAttributes[\"filled\"] = \"data-filled\";\n  /**\n   * Present when the field control is focused.\n   */\n  FieldControlDataAttributes[\"focused\"] = \"data-focused\";\n  return FieldControlDataAttributes;\n}({});", "import { FieldControlDataAttributes } from \"../control/FieldControlDataAttributes.js\";\nexport const DEFAULT_VALIDITY_STATE = {\n  badInput: false,\n  customError: false,\n  patternMismatch: false,\n  rangeOverflow: false,\n  rangeUnderflow: false,\n  stepMismatch: false,\n  tooLong: false,\n  tooShort: false,\n  typeMismatch: false,\n  valid: null,\n  valueMissing: false\n};\nexport const fieldValidityMapping = {\n  valid(value) {\n    if (value === null) {\n      return null;\n    }\n    if (value) {\n      return {\n        [FieldControlDataAttributes.valid]: ''\n      };\n    }\n    return {\n      [FieldControlDataAttributes.invalid]: ''\n    };\n  }\n};", "'use client';\n\nimport * as React from 'react';\nimport { NOOP } from \"../../utils/noop.js\";\nimport { DEFAULT_VALIDITY_STATE } from \"../utils/constants.js\";\nexport const FieldRootContext = /*#__PURE__*/React.createContext({\n  invalid: undefined,\n  controlId: undefined,\n  setControlId: NOOP,\n  labelId: undefined,\n  setLabelId: NOOP,\n  messageIds: [],\n  setMessageIds: NOOP,\n  name: undefined,\n  validityData: {\n    state: DEFAULT_VALIDITY_STATE,\n    errors: [],\n    error: '',\n    value: '',\n    initialValue: null\n  },\n  setValidityData: NOOP,\n  disabled: undefined,\n  touched: false,\n  setTouched: NOOP,\n  dirty: false,\n  setDirty: NOOP,\n  filled: false,\n  setFilled: NOOP,\n  focused: false,\n  setFocused: NOOP,\n  validate: () => null,\n  validationMode: 'onBlur',\n  validationDebounceTime: 0,\n  state: {\n    disabled: false,\n    valid: null,\n    touched: false,\n    dirty: false,\n    filled: false,\n    focused: false\n  },\n  markedDirtyRef: {\n    current: false\n  }\n});\nif (process.env.NODE_ENV !== \"production\") FieldRootContext.displayName = \"FieldRootContext\";\nexport function useFieldRootContext(optional = true) {\n  const context = React.useContext(FieldRootContext);\n  if (context.setControlId === NOOP && !optional) {\n    throw new Error('Base UI: FieldRootContext is missing. Field parts must be placed within <Field.Root>.');\n  }\n  return context;\n}", "export const NOOP = () => {};", "'use client';\n\nimport * as React from 'react';\nimport { NOOP } from \"../utils/noop.js\";\nexport const FormContext = /*#__PURE__*/React.createContext({\n  formRef: {\n    current: {\n      fields: new Map()\n    }\n  },\n  errors: {},\n  clearErrors: NOOP\n});\nif (process.env.NODE_ENV !== \"production\") FormContext.displayName = \"FormContext\";\nexport function useFormContext() {\n  return React.useContext(FormContext);\n}", "import * as React from 'react';\nimport { useMergedRefs, useMergedRefsN } from '@base-ui-components/utils/useMergedRefs';\nimport { isReactVersionAtLeast } from '@base-ui-components/utils/reactVersion';\nimport { mergeObjects } from '@base-ui-components/utils/mergeObjects';\nimport { getStyleHookProps } from \"./getStyleHookProps.js\";\nimport { resolveClassName } from \"./resolveClassName.js\";\nimport { mergeProps, mergePropsN, mergeClassNames } from \"../merge-props/index.js\";\nimport { EMPTY_OBJECT } from \"./constants.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * Renders a Base UI element.\n *\n * @param element The default HTML element to render. Can be overridden by the `render` prop.\n * @param componentProps An object containing the `render` and `className` props to be used for element customization. Other props are ignored.\n * @param params Additional parameters for rendering the element.\n */\nexport function useRenderElement(element, componentProps, params = {}) {\n  const renderProp = componentProps.render;\n  const outProps = useRenderElementProps(componentProps, params);\n  if (params.enabled === false) {\n    return null;\n  }\n  const state = params.state ?? EMPTY_OBJECT;\n  return evaluateRenderProp(element, renderProp, outProps, state);\n}\n\n/**\n * Computes render element final props.\n */\nfunction useRenderElementProps(componentProps, params = {}) {\n  const {\n    className: classNameProp,\n    render: renderProp\n  } = componentProps;\n  const {\n    state = EMPTY_OBJECT,\n    ref,\n    props,\n    disableStyleHooks,\n    customStyleHookMapping,\n    enabled = true\n  } = params;\n  const className = enabled ? resolveClassName(classNameProp, state) : undefined;\n  let styleHooks;\n  if (disableStyleHooks !== true) {\n    // SAFETY: We use typings to ensure `disableStyleHooks` is either always set or\n    // always unset, so this `if` block is stable across renders.\n    /* eslint-disable-next-line react-hooks/rules-of-hooks */\n    styleHooks = React.useMemo(() => enabled ? getStyleHookProps(state, customStyleHookMapping) : EMPTY_OBJECT, [state, customStyleHookMapping, enabled]);\n  }\n  const outProps = enabled ? mergeObjects(styleHooks, Array.isArray(props) ? mergePropsN(props) : props) ?? EMPTY_OBJECT : EMPTY_OBJECT;\n\n  // SAFETY: The `useMergedRefs` functions use a single hook to store the same value,\n  // switching between them at runtime is safe. If this assertion fails, React will\n  // throw at runtime anyway.\n  // This also skips the `useMergedRefs` call on the server, which is fine because\n  // refs are not used on the server side.\n  /* eslint-disable react-hooks/rules-of-hooks */\n  if (typeof document !== 'undefined') {\n    if (!enabled) {\n      useMergedRefs(null, null);\n    } else if (Array.isArray(ref)) {\n      outProps.ref = useMergedRefsN([outProps.ref, getChildRef(renderProp), ...ref]);\n    } else {\n      outProps.ref = useMergedRefs(outProps.ref, getChildRef(renderProp), ref);\n    }\n  }\n  if (!enabled) {\n    return EMPTY_OBJECT;\n  }\n  if (className !== undefined) {\n    outProps.className = mergeClassNames(outProps.className, className);\n  }\n  return outProps;\n}\nfunction evaluateRenderProp(element, render, props, state) {\n  if (render) {\n    if (typeof render === 'function') {\n      return render(props, state);\n    }\n    const mergedProps = mergeProps(props, render.props);\n    mergedProps.ref = props.ref;\n    return /*#__PURE__*/React.cloneElement(render, mergedProps);\n  }\n  if (element) {\n    if (typeof element === 'string') {\n      return renderTag(element, props);\n    }\n  }\n  // Unreachable, but the typings on `useRenderElement` need to be reworked\n  // to annotate it correctly.\n  throw new Error('Base UI: Render element or function are not defined.');\n}\nfunction renderTag(Tag, props) {\n  if (Tag === 'button') {\n    return /*#__PURE__*/_jsx(\"button\", {\n      type: \"button\",\n      ...props\n    });\n  }\n  if (Tag === 'img') {\n    return /*#__PURE__*/_jsx(\"img\", {\n      alt: \"\",\n      ...props\n    });\n  }\n  return /*#__PURE__*/React.createElement(Tag, props);\n}\nfunction getChildRef(render) {\n  if (render && typeof render !== 'function') {\n    return isReactVersionAtLeast(19) ? render.props.ref : render.ref;\n  }\n  return null;\n}", "import { useRefWithInit } from \"./useRefWithInit.js\";\n\n/**\n * Merges refs into a single memoized callback ref or `null`.\n * This makes sure multiple refs are updated together and have the same value.\n *\n * This function accepts up to four refs. If you need to merge more, or have an unspecified number of refs to merge,\n * use `useMergedRefsN` instead.\n */\n\nexport function useMergedRefs(a, b, c, d) {\n  const forkRef = useRefWithInit(createForkRef).current;\n  if (didChange(forkRef, a, b, c, d)) {\n    update(forkRef, [a, b, c, d]);\n  }\n  return forkRef.callback;\n}\n\n/**\n * Merges an array of refs into a single memoized callback ref or `null`.\n *\n * If you need to merge a fixed number (up to four) of refs, use `useMergedRefs` instead for better performance.\n */\nexport function useMergedRefsN(refs) {\n  const forkRef = useRefWithInit(createForkRef).current;\n  if (didChangeN(forkRef, refs)) {\n    update(forkRef, refs);\n  }\n  return forkRef.callback;\n}\nfunction createForkRef() {\n  return {\n    callback: null,\n    cleanup: null,\n    refs: []\n  };\n}\nfunction didChange(forkRef, a, b, c, d) {\n  // prettier-ignore\n  return forkRef.refs[0] !== a || forkRef.refs[1] !== b || forkRef.refs[2] !== c || forkRef.refs[3] !== d;\n}\nfunction didChangeN(forkRef, newRefs) {\n  return forkRef.refs.length !== newRefs.length || forkRef.refs.some((ref, index) => ref !== newRefs[index]);\n}\nfunction update(forkRef, refs) {\n  forkRef.refs = refs;\n  if (refs.every(ref => ref == null)) {\n    forkRef.callback = null;\n    return;\n  }\n  forkRef.callback = instance => {\n    if (forkRef.cleanup) {\n      forkRef.cleanup();\n      forkRef.cleanup = null;\n    }\n    if (instance != null) {\n      const cleanupCallbacks = Array(refs.length).fill(null);\n      for (let i = 0; i < refs.length; i += 1) {\n        const ref = refs[i];\n        if (ref == null) {\n          continue;\n        }\n        switch (typeof ref) {\n          case 'function':\n            {\n              const refCleanup = ref(instance);\n              if (typeof refCleanup === 'function') {\n                cleanupCallbacks[i] = refCleanup;\n              }\n              break;\n            }\n          case 'object':\n            {\n              ref.current = instance;\n              break;\n            }\n          default:\n        }\n      }\n      forkRef.cleanup = () => {\n        for (let i = 0; i < refs.length; i += 1) {\n          const ref = refs[i];\n          if (ref == null) {\n            continue;\n          }\n          switch (typeof ref) {\n            case 'function':\n              {\n                const cleanupCallback = cleanupCallbacks[i];\n                if (typeof cleanupCallback === 'function') {\n                  cleanupCallback();\n                } else {\n                  ref(null);\n                }\n                break;\n              }\n            case 'object':\n              {\n                ref.current = null;\n                break;\n              }\n            default:\n          }\n        }\n      };\n    }\n  };\n}", "import * as React from 'react';\nconst majorVersion = parseInt(React.version, 10);\nexport function isReactVersionAtLeast(reactVersionToCheck) {\n  return majorVersion >= reactVersionToCheck;\n}", "export function mergeObjects(a, b) {\n  if (a && !b) {\n    return a;\n  }\n  if (!a && b) {\n    return b;\n  }\n  if (a || b) {\n    return {\n      ...a,\n      ...b\n    };\n  }\n  return undefined;\n}", "export function getStyleHookProps(state, customMapping) {\n  const props = {};\n\n  /* eslint-disable-next-line guard-for-in */\n  for (const key in state) {\n    const value = state[key];\n    if (customMapping?.hasOwnProperty(key)) {\n      const customProps = customMapping[key](value);\n      if (customProps != null) {\n        Object.assign(props, customProps);\n      }\n      continue;\n    }\n    if (value === true) {\n      props[`data-${key.toLowerCase()}`] = '';\n    } else if (value) {\n      props[`data-${key.toLowerCase()}`] = value.toString();\n    }\n  }\n  return props;\n}", "/**\n * If the provided className is a string, it will be returned as is.\n * Otherwise, the function will call the className function with the state as the first argument.\n *\n * @param className\n * @param state\n */\nexport function resolveClassName(className, state) {\n  return typeof className === 'function' ? className(state) : className;\n}", "import { mergeObjects } from '@base-ui-components/utils/mergeObjects';\nconst EMPTY_PROPS = {};\n\n/**\n * Merges multiple sets of React props. It follows the Object.assign pattern where the rightmost object's fields overwrite\n * the conflicting ones from others. This doesn't apply to event handlers, `className` and `style` props.\n * Event handlers are merged such that they are called in sequence (the rightmost one being called first),\n * and allows the user to prevent the subsequent event handlers from being\n * executed by attaching a `preventBaseUIHandler` method.\n * It also merges the `className` and `style` props, whereby the classes are concatenated\n * and the rightmost styles overwrite the subsequent ones.\n *\n * Props can either be provided as objects or as functions that take the previous props as an argument.\n * The function will receive the merged props up to that point (going from left to right):\n * so in the case of `(obj1, obj2, fn, obj3)`, `fn` will receive the merged props of `obj1` and `obj2`.\n * The function is responsible for chaining event handlers if needed (i.e. we don't run the merge logic).\n *\n * Event handlers returned by the functions are not automatically prevented when `preventBaseUIHandler` is called.\n * They must check `event.baseUIHandlerPrevented` themselves and bail out if it's true.\n *\n * @important **`ref` is not merged.**\n * @param props props to merge.\n * @returns the merged props.\n */\n/* eslint-disable id-denylist */\n\nexport function mergeProps(a, b, c, d, e) {\n  // We need to mutably own `merged`\n  let merged = {\n    ...resolvePropsGetter(a, EMPTY_PROPS)\n  };\n  if (b) {\n    merged = mergeOne(merged, b);\n  }\n  if (c) {\n    merged = mergeOne(merged, c);\n  }\n  if (d) {\n    merged = mergeOne(merged, d);\n  }\n  if (e) {\n    merged = mergeOne(merged, e);\n  }\n  return merged;\n}\n/* eslint-enable id-denylist */\n\nexport function mergePropsN(props) {\n  if (props.length === 0) {\n    return EMPTY_PROPS;\n  }\n  if (props.length === 1) {\n    return resolvePropsGetter(props[0], EMPTY_PROPS);\n  }\n\n  // We need to mutably own `merged`\n  let merged = {\n    ...resolvePropsGetter(props[0], EMPTY_PROPS)\n  };\n  for (let i = 1; i < props.length; i += 1) {\n    merged = mergeOne(merged, props[i]);\n  }\n  return merged;\n}\nfunction mergeOne(merged, inputProps) {\n  if (isPropsGetter(inputProps)) {\n    return inputProps(merged);\n  }\n  return mutablyMergeInto(merged, inputProps);\n}\n\n/**\n * Merges two sets of props. In case of conflicts, the external props take precedence.\n */\nfunction mutablyMergeInto(mergedProps, externalProps) {\n  if (!externalProps) {\n    return mergedProps;\n  }\n\n  // eslint-disable-next-line guard-for-in\n  for (const propName in externalProps) {\n    const externalPropValue = externalProps[propName];\n    switch (propName) {\n      case 'style':\n        {\n          mergedProps[propName] = mergeObjects(mergedProps.style, externalPropValue);\n          break;\n        }\n      case 'className':\n        {\n          mergedProps[propName] = mergeClassNames(mergedProps.className, externalPropValue);\n          break;\n        }\n      default:\n        {\n          if (isEventHandler(propName, externalPropValue)) {\n            mergedProps[propName] = mergeEventHandlers(mergedProps[propName], externalPropValue);\n          } else {\n            mergedProps[propName] = externalPropValue;\n          }\n        }\n    }\n  }\n  return mergedProps;\n}\nfunction isEventHandler(key, value) {\n  // This approach is more efficient than using a regex.\n  const code0 = key.charCodeAt(0);\n  const code1 = key.charCodeAt(1);\n  const code2 = key.charCodeAt(2);\n  return code0 === 111 /* o */ && code1 === 110 /* n */ && code2 >= 65 /* A */ && code2 <= 90 /* Z */ && (typeof value === 'function' || typeof value === 'undefined');\n}\nfunction isPropsGetter(inputProps) {\n  return typeof inputProps === 'function';\n}\nfunction resolvePropsGetter(inputProps, previousProps) {\n  if (isPropsGetter(inputProps)) {\n    return inputProps(previousProps);\n  }\n  return inputProps ?? EMPTY_PROPS;\n}\nfunction mergeEventHandlers(ourHandler, theirHandler) {\n  if (!theirHandler) {\n    return ourHandler;\n  }\n  if (!ourHandler) {\n    return theirHandler;\n  }\n  return event => {\n    if (isSyntheticEvent(event)) {\n      const baseUIEvent = event;\n      makeEventPreventable(baseUIEvent);\n      const result = theirHandler(baseUIEvent);\n      if (!baseUIEvent.baseUIHandlerPrevented) {\n        ourHandler?.(baseUIEvent);\n      }\n      return result;\n    }\n    const result = theirHandler(event);\n    ourHandler?.(event);\n    return result;\n  };\n}\nexport function makeEventPreventable(event) {\n  event.preventBaseUIHandler = () => {\n    event.baseUIHandlerPrevented = true;\n  };\n  return event;\n}\nexport function mergeClassNames(ourClassName, theirClassName) {\n  if (theirClassName) {\n    if (ourClassName) {\n      // eslint-disable-next-line prefer-template\n      return theirClassName + ' ' + ourClassName;\n    }\n    return theirClassName;\n  }\n  return ourClassName;\n}\nfunction isSyntheticEvent(event) {\n  return event != null && typeof event === 'object' && 'nativeEvent' in event;\n}", "export const TYPEAHEAD_RESET_MS = 500;\nexport const PATIENT_CLICK_THRESHOLD = 500;\nexport const DISABLED_TRANSITIONS_STYLE = {\n  style: {\n    transition: 'none'\n  }\n};\nexport const EMPTY_OBJECT = {};\nexport const EMPTY_ARRAY = [];\nexport const CLICK_TRIGGER_IDENTIFIER = 'data-base-ui-click-trigger';\n\n/**\n * Used for dropdowns that usually strictly prefer top/bottom placements and\n * use `var(--available-height)` to limit their height.\n */\nexport const DROPDOWN_COLLISION_AVOIDANCE = {\n  fallbackAxisSide: 'none'\n};\n\n/**\n * Used by regular popups that usually aren't scrollable and are allowed to\n * freely flip to any axis of placement.\n */\nexport const POPUP_COLLISION_AVOIDANCE = {\n  fallbackAxisSide: 'end'\n};", "'use client';\n\nimport * as React from 'react';\nconst noop = () => {};\nexport const useIsoLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : noop;", "function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nconst invalidOverflowDisplayValues = /*#__PURE__*/new Set(['inline', 'contents']);\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !invalidOverflowDisplayValues.has(display);\n}\nconst tableElements = /*#__PURE__*/new Set(['table', 'td', 'th']);\nfunction isTableElement(element) {\n  return tableElements.has(getNodeName(element));\n}\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(element) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (_e) {\n      return false;\n    }\n  });\n}\nconst transformProperties = ['transform', 'translate', 'scale', 'rotate', 'perspective'];\nconst willChangeValues = ['transform', 'translate', 'scale', 'rotate', 'perspective', 'filter'];\nconst containValues = ['paint', 'layout', 'strict', 'content'];\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  // https://drafts.csswg.org/css-transforms-2/#individual-transforms\n  return transformProperties.some(value => css[value] ? css[value] !== 'none' : false) || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || willChangeValues.some(value => (css.willChange || '').includes(value)) || containValues.some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nconst lastTraversableNodeNames = /*#__PURE__*/new Set(['html', 'body', '#document']);\nfunction isLastTraversableNode(node) {\n  return lastTraversableNodeNames.has(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n", "const hasNavigator = typeof navigator !== 'undefined';\nconst nav = getNavigatorData();\nconst platform = getPlatform();\nconst userAgent = getUserAgent();\nexport const isWebKit = typeof CSS === 'undefined' || !CSS.supports ? false : CSS.supports('-webkit-backdrop-filter:none');\nexport const isIOS =\n// iPads can claim to be MacIntel\nnav.platform === 'MacIntel' && nav.maxTouchPoints > 1 ? true : /iP(hone|ad|od)|iOS/.test(nav.platform);\nexport const isFirefox = hasNavigator && /firefox/i.test(userAgent);\nexport const isSafari = hasNavigator && /apple/i.test(navigator.vendor);\nexport const isAndroid = hasNavigator && /android/i.test(platform) || /android/i.test(userAgent);\nexport const isMac = hasNavigator && platform.toLowerCase().startsWith('mac') && !navigator.maxTouchPoints;\nexport const isJSDOM = userAgent.includes('jsdom/');\n\n// Avoid Chrome DevTools blue warning.\nfunction getNavigatorData() {\n  if (!hasNavigator) {\n    return {\n      platform: '',\n      maxTouchPoints: -1\n    };\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData?.platform) {\n    return {\n      platform: uaData.platform,\n      maxTouchPoints: navigator.maxTouchPoints\n    };\n  }\n  return {\n    platform: navigator.platform ?? '',\n    maxTouchPoints: navigator.maxTouchPoints ?? -1\n  };\n}\nfunction getUserAgent() {\n  if (!hasNavigator) {\n    return '';\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData && Array.isArray(uaData.brands)) {\n    return uaData.brands.map(({\n      brand,\n      version\n    }) => `${brand}/${version}`).join(' ');\n  }\n  return navigator.userAgent;\n}\nfunction getPlatform() {\n  if (!hasNavigator) {\n    return '';\n  }\n  const uaData = navigator.userAgentData;\n  if (uaData?.platform) {\n    return uaData.platform;\n  }\n  return navigator.platform ?? '';\n}", "import { isAndroid, isJSDOM } from '@base-ui-components/utils/detectBrowser';\nexport function stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\nexport function isReactEvent(event) {\n  return 'nativeEvent' in event;\n}\n\n// License: https://github.com/adobe/react-spectrum/blob/b35d5c02fe900badccd0cf1a8f23bb593419f238/packages/@react-aria/utils/src/isVirtualEvent.ts\nexport function isVirtualClick(event) {\n  // FIXME: Firefox is now emitting a deprecation warning for `mozInputSource`.\n  // Try to find a workaround for this. `react-aria` source still has the check.\n  if (event.mozInputSource === 0 && event.isTrusted) {\n    return true;\n  }\n  if (isAndroid && event.pointerType) {\n    return event.type === 'click' && event.buttons === 1;\n  }\n  return event.detail === 0 && !event.pointerType;\n}\nexport function isVirtualPointerEvent(event) {\n  if (isJSDOM) {\n    return false;\n  }\n  return !isAndroid && event.width === 0 && event.height === 0 || isAndroid && event.width === 1 && event.height === 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'mouse' ||\n  // iOS VoiceOver returns 0.333• for width/height.\n  event.width < 1 && event.height < 1 && event.pressure === 0 && event.detail === 0 && event.pointerType === 'touch';\n}\nexport function isMouseLikePointerType(pointerType, strict) {\n  // On some Linux machines with Chromium, mouse inputs return a `pointerType`\n  // of \"pen\": https://github.com/floating-ui/floating-ui/issues/2015\n  const values = ['mouse', 'pen'];\n  if (!strict) {\n    values.push('', undefined);\n  }\n  return values.includes(pointerType);\n}", "import { isHTMLElement, isShadowRoot } from '@floating-ui/utils/dom';\nimport { isJSDOM } from '@base-ui-components/utils/detectBrowser';\nimport { FOCUSABLE_ATTRIBUTE, TYPEABLE_SELECTOR } from \"./constants.js\";\nexport function activeElement(doc) {\n  let element = doc.activeElement;\n  while (element?.shadowRoot?.activeElement != null) {\n    element = element.shadowRoot.activeElement;\n  }\n  return element;\n}\nexport function contains(parent, child) {\n  if (!parent || !child) {\n    return false;\n  }\n  const rootNode = child.getRootNode?.();\n\n  // First, attempt with faster native method\n  if (parent.contains(child)) {\n    return true;\n  }\n\n  // then fallback to custom implementation with Shadow DOM support\n  if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n    while (next) {\n      if (parent === next) {\n        return true;\n      }\n      // @ts-ignore\n      next = next.parentNode || next.host;\n    }\n  }\n\n  // Give up, the result is false\n  return false;\n}\nexport function getTarget(event) {\n  if ('composedPath' in event) {\n    return event.composedPath()[0];\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support\n  // `composedPath()`, but browsers without shadow DOM don't.\n  return event.target;\n}\nexport function isEventTargetWithin(event, node) {\n  if (node == null) {\n    return false;\n  }\n  if ('composedPath' in event) {\n    return event.composedPath().includes(node);\n  }\n\n  // TS thinks `event` is of type never as it assumes all browsers support composedPath, but browsers without shadow dom don't\n  const eventAgain = event;\n  return eventAgain.target != null && node.contains(eventAgain.target);\n}\nexport function isRootElement(element) {\n  return element.matches('html,body');\n}\nexport function getDocument(node) {\n  return node?.ownerDocument || document;\n}\nexport function isTypeableElement(element) {\n  return isHTMLElement(element) && element.matches(TYPEABLE_SELECTOR);\n}\nexport function isTypeableCombobox(element) {\n  if (!element) {\n    return false;\n  }\n  return element.getAttribute('role') === 'combobox' && isTypeableElement(element);\n}\nexport function matchesFocusVisible(element) {\n  // We don't want to block focus from working with `visibleOnly`\n  // (JSDOM doesn't match `:focus-visible` when the element has `:focus`)\n  if (!element || isJSDOM) {\n    return true;\n  }\n  try {\n    return element.matches(':focus-visible');\n  } catch (_e) {\n    return true;\n  }\n}\nexport function getFloatingFocusElement(floatingElement) {\n  if (!floatingElement) {\n    return null;\n  }\n  // Try to find the element that has `{...getFloatingProps()}` spread on it.\n  // This indicates the floating element is acting as a positioning wrapper, and\n  // so focus should be managed on the child element with the event handlers and\n  // aria props.\n  return floatingElement.hasAttribute(FOCUSABLE_ATTRIBUTE) ? floatingElement : floatingElement.querySelector(`[${FOCUSABLE_ATTRIBUTE}]`) || floatingElement;\n}", "/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nconst yAxisSides = /*#__PURE__*/new Set(['top', 'bottom']);\nfunction getSideAxis(placement) {\n  return yAxisSides.has(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nconst lrPlacement = ['left', 'right'];\nconst rlPlacement = ['right', 'left'];\nconst tbPlacement = ['top', 'bottom'];\nconst btPlacement = ['bottom', 'top'];\nfunction getSideList(side, isStart, rtl) {\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rlPlacement : lrPlacement;\n      return isStart ? lrPlacement : rlPlacement;\n    case 'left':\n    case 'right':\n      return isStart ? tbPlacement : btPlacement;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n", "// NOTE: separate `:not()` selectors has broader browser support than the newer\n//  `:not([inert], [inert] *)` (Feb 2023)\n// CAREFUL: JSDom does not support `:not([inert] *)` as a selector; using it causes\n//  the entire query to fail, resulting in no nodes found, which will break a lot\n//  of things... so we have to rely on JS to identify nodes inside an inert container\nconst candidateSelectors = [\n  'input:not([inert])',\n  'select:not([inert])',\n  'textarea:not([inert])',\n  'a[href]:not([inert])',\n  'button:not([inert])',\n  '[tabindex]:not(slot):not([inert])',\n  'audio[controls]:not([inert])',\n  'video[controls]:not([inert])',\n  '[contenteditable]:not([contenteditable=\"false\"]):not([inert])',\n  'details>summary:first-of-type:not([inert])',\n  'details:not([inert])',\n];\nconst candidateSelector = /* #__PURE__ */ candidateSelectors.join(',');\n\nconst NoElement = typeof Element === 'undefined';\n\nconst matches = NoElement\n  ? function () {}\n  : Element.prototype.matches ||\n    Element.prototype.msMatchesSelector ||\n    Element.prototype.webkitMatchesSelector;\n\nconst getRootNode =\n  !NoElement && Element.prototype.getRootNode\n    ? (element) => element?.getRootNode?.()\n    : (element) => element?.ownerDocument;\n\n/**\n * Determines if a node is inert or in an inert ancestor.\n * @param {Element} [node]\n * @param {boolean} [lookUp] If true and `node` is not inert, looks up at ancestors to\n *  see if any of them are inert. If false, only `node` itself is considered.\n * @returns {boolean} True if inert itself or by way of being in an inert ancestor.\n *  False if `node` is falsy.\n */\nconst isInert = function (node, lookUp = true) {\n  // CAREFUL: JSDom does not support inert at all, so we can't use the `HTMLElement.inert`\n  //  JS API property; we have to check the attribute, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's an active element\n  const inertAtt = node?.getAttribute?.('inert');\n  const inert = inertAtt === '' || inertAtt === 'true';\n\n  // NOTE: this could also be handled with `node.matches('[inert], :is([inert] *)')`\n  //  if it weren't for `matches()` not being a function on shadow roots; the following\n  //  code works for any kind of node\n  // CAREFUL: JSDom does not appear to support certain selectors like `:not([inert] *)`\n  //  so it likely would not support `:is([inert] *)` either...\n  const result = inert || (lookUp && node && isInert(node.parentNode)); // recursive\n\n  return result;\n};\n\n/**\n * Determines if a node's content is editable.\n * @param {Element} [node]\n * @returns True if it's content-editable; false if it's not or `node` is falsy.\n */\nconst isContentEditable = function (node) {\n  // CAREFUL: JSDom does not support the `HTMLElement.isContentEditable` API so we have\n  //  to use the attribute directly to check for this, which can either be empty or 'true';\n  //  if it's `null` (not specified) or 'false', it's a non-editable element\n  const attValue = node?.getAttribute?.('contenteditable');\n  return attValue === '' || attValue === 'true';\n};\n\n/**\n * @param {Element} el container to check in\n * @param {boolean} includeContainer add container to check\n * @param {(node: Element) => boolean} filter filter candidates\n * @returns {Element[]}\n */\nconst getCandidates = function (el, includeContainer, filter) {\n  // even if `includeContainer=false`, we still have to check it for inertness because\n  //  if it's inert, all its children are inert\n  if (isInert(el)) {\n    return [];\n  }\n\n  let candidates = Array.prototype.slice.apply(\n    el.querySelectorAll(candidateSelector)\n  );\n  if (includeContainer && matches.call(el, candidateSelector)) {\n    candidates.unshift(el);\n  }\n  candidates = candidates.filter(filter);\n  return candidates;\n};\n\n/**\n * @callback GetShadowRoot\n * @param {Element} element to check for shadow root\n * @returns {ShadowRoot|boolean} ShadowRoot if available or boolean indicating if a shadowRoot is attached but not available.\n */\n\n/**\n * @callback ShadowRootFilter\n * @param {Element} shadowHostNode the element which contains shadow content\n * @returns {boolean} true if a shadow root could potentially contain valid candidates.\n */\n\n/**\n * @typedef {Object} CandidateScope\n * @property {Element} scopeParent contains inner candidates\n * @property {Element[]} candidates list of candidates found in the scope parent\n */\n\n/**\n * @typedef {Object} IterativeOptions\n * @property {GetShadowRoot|boolean} getShadowRoot true if shadow support is enabled; falsy if not;\n *  if a function, implies shadow support is enabled and either returns the shadow root of an element\n *  or a boolean stating if it has an undisclosed shadow root\n * @property {(node: Element) => boolean} filter filter candidates\n * @property {boolean} flatten if true then result will flatten any CandidateScope into the returned list\n * @property {ShadowRootFilter} shadowRootFilter filter shadow roots;\n */\n\n/**\n * @param {Element[]} elements list of element containers to match candidates from\n * @param {boolean} includeContainer add container list to check\n * @param {IterativeOptions} options\n * @returns {Array.<Element|CandidateScope>}\n */\nconst getCandidatesIteratively = function (\n  elements,\n  includeContainer,\n  options\n) {\n  const candidates = [];\n  const elementsToCheck = Array.from(elements);\n  while (elementsToCheck.length) {\n    const element = elementsToCheck.shift();\n    if (isInert(element, false)) {\n      // no need to look up since we're drilling down\n      // anything inside this container will also be inert\n      continue;\n    }\n\n    if (element.tagName === 'SLOT') {\n      // add shadow dom slot scope (slot itself cannot be focusable)\n      const assigned = element.assignedElements();\n      const content = assigned.length ? assigned : element.children;\n      const nestedCandidates = getCandidatesIteratively(content, true, options);\n      if (options.flatten) {\n        candidates.push(...nestedCandidates);\n      } else {\n        candidates.push({\n          scopeParent: element,\n          candidates: nestedCandidates,\n        });\n      }\n    } else {\n      // check candidate element\n      const validCandidate = matches.call(element, candidateSelector);\n      if (\n        validCandidate &&\n        options.filter(element) &&\n        (includeContainer || !elements.includes(element))\n      ) {\n        candidates.push(element);\n      }\n\n      // iterate over shadow content if possible\n      const shadowRoot =\n        element.shadowRoot ||\n        // check for an undisclosed shadow\n        (typeof options.getShadowRoot === 'function' &&\n          options.getShadowRoot(element));\n\n      // no inert look up because we're already drilling down and checking for inertness\n      //  on the way down, so all containers to this root node should have already been\n      //  vetted as non-inert\n      const validShadowRoot =\n        !isInert(shadowRoot, false) &&\n        (!options.shadowRootFilter || options.shadowRootFilter(element));\n\n      if (shadowRoot && validShadowRoot) {\n        // add shadow dom scope IIF a shadow root node was given; otherwise, an undisclosed\n        //  shadow exists, so look at light dom children as fallback BUT create a scope for any\n        //  child candidates found because they're likely slotted elements (elements that are\n        //  children of the web component element (which has the shadow), in the light dom, but\n        //  slotted somewhere _inside_ the undisclosed shadow) -- the scope is created below,\n        //  _after_ we return from this recursive call\n        const nestedCandidates = getCandidatesIteratively(\n          shadowRoot === true ? element.children : shadowRoot.children,\n          true,\n          options\n        );\n\n        if (options.flatten) {\n          candidates.push(...nestedCandidates);\n        } else {\n          candidates.push({\n            scopeParent: element,\n            candidates: nestedCandidates,\n          });\n        }\n      } else {\n        // there's not shadow so just dig into the element's (light dom) children\n        //  __without__ giving the element special scope treatment\n        elementsToCheck.unshift(...element.children);\n      }\n    }\n  }\n  return candidates;\n};\n\n/**\n * @private\n * Determines if the node has an explicitly specified `tabindex` attribute.\n * @param {HTMLElement} node\n * @returns {boolean} True if so; false if not.\n */\nconst hasTabIndex = function (node) {\n  return !isNaN(parseInt(node.getAttribute('tabindex'), 10));\n};\n\n/**\n * Determine the tab index of a given node.\n * @param {HTMLElement} node\n * @returns {number} Tab order (negative, 0, or positive number).\n * @throws {Error} If `node` is falsy.\n */\nconst getTabIndex = function (node) {\n  if (!node) {\n    throw new Error('No node provided');\n  }\n\n  if (node.tabIndex < 0) {\n    // in Chrome, <details/>, <audio controls/> and <video controls/> elements get a default\n    // `tabIndex` of -1 when the 'tabindex' attribute isn't specified in the DOM,\n    // yet they are still part of the regular tab order; in FF, they get a default\n    // `tabIndex` of 0; since Chrome still puts those elements in the regular tab\n    // order, consider their tab index to be 0.\n    // Also browsers do not return `tabIndex` correctly for contentEditable nodes;\n    // so if they don't have a tabindex attribute specifically set, assume it's 0.\n    if (\n      (/^(AUDIO|VIDEO|DETAILS)$/.test(node.tagName) ||\n        isContentEditable(node)) &&\n      !hasTabIndex(node)\n    ) {\n      return 0;\n    }\n  }\n\n  return node.tabIndex;\n};\n\n/**\n * Determine the tab index of a given node __for sort order purposes__.\n * @param {HTMLElement} node\n * @param {boolean} [isScope] True for a custom element with shadow root or slot that, by default,\n *  has tabIndex -1, but needs to be sorted by document order in order for its content to be\n *  inserted into the correct sort position.\n * @returns {number} Tab order (negative, 0, or positive number).\n */\nconst getSortOrderTabIndex = function (node, isScope) {\n  const tabIndex = getTabIndex(node);\n\n  if (tabIndex < 0 && isScope && !hasTabIndex(node)) {\n    return 0;\n  }\n\n  return tabIndex;\n};\n\nconst sortOrderedTabbables = function (a, b) {\n  return a.tabIndex === b.tabIndex\n    ? a.documentOrder - b.documentOrder\n    : a.tabIndex - b.tabIndex;\n};\n\nconst isInput = function (node) {\n  return node.tagName === 'INPUT';\n};\n\nconst isHiddenInput = function (node) {\n  return isInput(node) && node.type === 'hidden';\n};\n\nconst isDetailsWithSummary = function (node) {\n  const r =\n    node.tagName === 'DETAILS' &&\n    Array.prototype.slice\n      .apply(node.children)\n      .some((child) => child.tagName === 'SUMMARY');\n  return r;\n};\n\nconst getCheckedRadio = function (nodes, form) {\n  for (let i = 0; i < nodes.length; i++) {\n    if (nodes[i].checked && nodes[i].form === form) {\n      return nodes[i];\n    }\n  }\n};\n\nconst isTabbableRadio = function (node) {\n  if (!node.name) {\n    return true;\n  }\n  const radioScope = node.form || getRootNode(node);\n  const queryRadios = function (name) {\n    return radioScope.querySelectorAll(\n      'input[type=\"radio\"][name=\"' + name + '\"]'\n    );\n  };\n\n  let radioSet;\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.CSS !== 'undefined' &&\n    typeof window.CSS.escape === 'function'\n  ) {\n    radioSet = queryRadios(window.CSS.escape(node.name));\n  } else {\n    try {\n      radioSet = queryRadios(node.name);\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(\n        'Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s',\n        err.message\n      );\n      return false;\n    }\n  }\n\n  const checked = getCheckedRadio(radioSet, node.form);\n  return !checked || checked === node;\n};\n\nconst isRadio = function (node) {\n  return isInput(node) && node.type === 'radio';\n};\n\nconst isNonTabbableRadio = function (node) {\n  return isRadio(node) && !isTabbableRadio(node);\n};\n\n// determines if a node is ultimately attached to the window's document\nconst isNodeAttached = function (node) {\n  // The root node is the shadow root if the node is in a shadow DOM; some document otherwise\n  //  (but NOT _the_ document; see second 'If' comment below for more).\n  // If rootNode is shadow root, it'll have a host, which is the element to which the shadow\n  //  is attached, and the one we need to check if it's in the document or not (because the\n  //  shadow, and all nodes it contains, is never considered in the document since shadows\n  //  behave like self-contained DOMs; but if the shadow's HOST, which is part of the document,\n  //  is hidden, or is not in the document itself but is detached, it will affect the shadow's\n  //  visibility, including all the nodes it contains). The host could be any normal node,\n  //  or a custom element (i.e. web component). Either way, that's the one that is considered\n  //  part of the document, not the shadow root, nor any of its children (i.e. the node being\n  //  tested).\n  // To further complicate things, we have to look all the way up until we find a shadow HOST\n  //  that is attached (or find none) because the node might be in nested shadows...\n  // If rootNode is not a shadow root, it won't have a host, and so rootNode should be the\n  //  document (per the docs) and while it's a Document-type object, that document does not\n  //  appear to be the same as the node's `ownerDocument` for some reason, so it's safer\n  //  to ignore the rootNode at this point, and use `node.ownerDocument`. Otherwise,\n  //  using `rootNode.contains(node)` will _always_ be true we'll get false-positives when\n  //  node is actually detached.\n  // NOTE: If `nodeRootHost` or `node` happens to be the `document` itself (which is possible\n  //  if a tabbable/focusable node was quickly added to the DOM, focused, and then removed\n  //  from the DOM as in https://github.com/focus-trap/focus-trap-react/issues/905), then\n  //  `ownerDocument` will be `null`, hence the optional chaining on it.\n  let nodeRoot = node && getRootNode(node);\n  let nodeRootHost = nodeRoot?.host;\n\n  // in some cases, a detached node will return itself as the root instead of a document or\n  //  shadow root object, in which case, we shouldn't try to look further up the host chain\n  let attached = false;\n  if (nodeRoot && nodeRoot !== node) {\n    attached = !!(\n      nodeRootHost?.ownerDocument?.contains(nodeRootHost) ||\n      node?.ownerDocument?.contains(node)\n    );\n\n    while (!attached && nodeRootHost) {\n      // since it's not attached and we have a root host, the node MUST be in a nested shadow DOM,\n      //  which means we need to get the host's host and check if that parent host is contained\n      //  in (i.e. attached to) the document\n      nodeRoot = getRootNode(nodeRootHost);\n      nodeRootHost = nodeRoot?.host;\n      attached = !!nodeRootHost?.ownerDocument?.contains(nodeRootHost);\n    }\n  }\n\n  return attached;\n};\n\nconst isZeroArea = function (node) {\n  const { width, height } = node.getBoundingClientRect();\n  return width === 0 && height === 0;\n};\nconst isHidden = function (node, { displayCheck, getShadowRoot }) {\n  // NOTE: visibility will be `undefined` if node is detached from the document\n  //  (see notes about this further down), which means we will consider it visible\n  //  (this is legacy behavior from a very long way back)\n  // NOTE: we check this regardless of `displayCheck=\"none\"` because this is a\n  //  _visibility_ check, not a _display_ check\n  if (getComputedStyle(node).visibility === 'hidden') {\n    return true;\n  }\n\n  const isDirectSummary = matches.call(node, 'details>summary:first-of-type');\n  const nodeUnderDetails = isDirectSummary ? node.parentElement : node;\n  if (matches.call(nodeUnderDetails, 'details:not([open]) *')) {\n    return true;\n  }\n\n  if (\n    !displayCheck ||\n    displayCheck === 'full' ||\n    displayCheck === 'legacy-full'\n  ) {\n    if (typeof getShadowRoot === 'function') {\n      // figure out if we should consider the node to be in an undisclosed shadow and use the\n      //  'non-zero-area' fallback\n      const originalNode = node;\n      while (node) {\n        const parentElement = node.parentElement;\n        const rootNode = getRootNode(node);\n        if (\n          parentElement &&\n          !parentElement.shadowRoot &&\n          getShadowRoot(parentElement) === true // check if there's an undisclosed shadow\n        ) {\n          // node has an undisclosed shadow which means we can only treat it as a black box, so we\n          //  fall back to a non-zero-area test\n          return isZeroArea(node);\n        } else if (node.assignedSlot) {\n          // iterate up slot\n          node = node.assignedSlot;\n        } else if (!parentElement && rootNode !== node.ownerDocument) {\n          // cross shadow boundary\n          node = rootNode.host;\n        } else {\n          // iterate up normal dom\n          node = parentElement;\n        }\n      }\n\n      node = originalNode;\n    }\n    // else, `getShadowRoot` might be true, but all that does is enable shadow DOM support\n    //  (i.e. it does not also presume that all nodes might have undisclosed shadows); or\n    //  it might be a falsy value, which means shadow DOM support is disabled\n\n    // Since we didn't find it sitting in an undisclosed shadow (or shadows are disabled)\n    //  now we can just test to see if it would normally be visible or not, provided it's\n    //  attached to the main document.\n    // NOTE: We must consider case where node is inside a shadow DOM and given directly to\n    //  `isTabbable()` or `isFocusable()` -- regardless of `getShadowRoot` option setting.\n\n    if (isNodeAttached(node)) {\n      // this works wherever the node is: if there's at least one client rect, it's\n      //  somehow displayed; it also covers the CSS 'display: contents' case where the\n      //  node itself is hidden in place of its contents; and there's no need to search\n      //  up the hierarchy either\n      return !node.getClientRects().length;\n    }\n\n    // Else, the node isn't attached to the document, which means the `getClientRects()`\n    //  API will __always__ return zero rects (this can happen, for example, if React\n    //  is used to render nodes onto a detached tree, as confirmed in this thread:\n    //  https://github.com/facebook/react/issues/9117#issuecomment-284228870)\n    //\n    // It also means that even window.getComputedStyle(node).display will return `undefined`\n    //  because styles are only computed for nodes that are in the document.\n    //\n    // NOTE: THIS HAS BEEN THE CASE FOR YEARS. It is not new, nor is it caused by tabbable\n    //  somehow. Though it was never stated officially, anyone who has ever used tabbable\n    //  APIs on nodes in detached containers has actually implicitly used tabbable in what\n    //  was later (as of v5.2.0 on Apr 9, 2021) called `displayCheck=\"none\"` mode -- essentially\n    //  considering __everything__ to be visible because of the innability to determine styles.\n    //\n    // v6.0.0: As of this major release, the default 'full' option __no longer treats detached\n    //  nodes as visible with the 'none' fallback.__\n    if (displayCheck !== 'legacy-full') {\n      return true; // hidden\n    }\n    // else, fallback to 'none' mode and consider the node visible\n  } else if (displayCheck === 'non-zero-area') {\n    // NOTE: Even though this tests that the node's client rect is non-zero to determine\n    //  whether it's displayed, and that a detached node will __always__ have a zero-area\n    //  client rect, we don't special-case for whether the node is attached or not. In\n    //  this mode, we do want to consider nodes that have a zero area to be hidden at all\n    //  times, and that includes attached or not.\n    return isZeroArea(node);\n  }\n\n  // visible, as far as we can tell, or per current `displayCheck=none` mode, we assume\n  //  it's visible\n  return false;\n};\n\n// form fields (nested) inside a disabled fieldset are not focusable/tabbable\n//  unless they are in the _first_ <legend> element of the top-most disabled\n//  fieldset\nconst isDisabledFromFieldset = function (node) {\n  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(node.tagName)) {\n    let parentNode = node.parentElement;\n    // check if `node` is contained in a disabled <fieldset>\n    while (parentNode) {\n      if (parentNode.tagName === 'FIELDSET' && parentNode.disabled) {\n        // look for the first <legend> among the children of the disabled <fieldset>\n        for (let i = 0; i < parentNode.children.length; i++) {\n          const child = parentNode.children.item(i);\n          // when the first <legend> (in document order) is found\n          if (child.tagName === 'LEGEND') {\n            // if its parent <fieldset> is not nested in another disabled <fieldset>,\n            // return whether `node` is a descendant of its first <legend>\n            return matches.call(parentNode, 'fieldset[disabled] *')\n              ? true\n              : !child.contains(node);\n          }\n        }\n        // the disabled <fieldset> containing `node` has no <legend>\n        return true;\n      }\n      parentNode = parentNode.parentElement;\n    }\n  }\n\n  // else, node's tabbable/focusable state should not be affected by a fieldset's\n  //  enabled/disabled state\n  return false;\n};\n\nconst isNodeMatchingSelectorFocusable = function (options, node) {\n  if (\n    node.disabled ||\n    // we must do an inert look up to filter out any elements inside an inert ancestor\n    //  because we're limited in the type of selectors we can use in JSDom (see related\n    //  note related to `candidateSelectors`)\n    isInert(node) ||\n    isHiddenInput(node) ||\n    isHidden(node, options) ||\n    // For a details element with a summary, the summary element gets the focus\n    isDetailsWithSummary(node) ||\n    isDisabledFromFieldset(node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isNodeMatchingSelectorTabbable = function (options, node) {\n  if (\n    isNonTabbableRadio(node) ||\n    getTabIndex(node) < 0 ||\n    !isNodeMatchingSelectorFocusable(options, node)\n  ) {\n    return false;\n  }\n  return true;\n};\n\nconst isValidShadowRootTabbable = function (shadowHostNode) {\n  const tabIndex = parseInt(shadowHostNode.getAttribute('tabindex'), 10);\n  if (isNaN(tabIndex) || tabIndex >= 0) {\n    return true;\n  }\n  // If a custom element has an explicit negative tabindex,\n  // browsers will not allow tab targeting said element's children.\n  return false;\n};\n\n/**\n * @param {Array.<Element|CandidateScope>} candidates\n * @returns Element[]\n */\nconst sortByOrder = function (candidates) {\n  const regularTabbables = [];\n  const orderedTabbables = [];\n  candidates.forEach(function (item, i) {\n    const isScope = !!item.scopeParent;\n    const element = isScope ? item.scopeParent : item;\n    const candidateTabindex = getSortOrderTabIndex(element, isScope);\n    const elements = isScope ? sortByOrder(item.candidates) : element;\n    if (candidateTabindex === 0) {\n      isScope\n        ? regularTabbables.push(...elements)\n        : regularTabbables.push(element);\n    } else {\n      orderedTabbables.push({\n        documentOrder: i,\n        tabIndex: candidateTabindex,\n        item: item,\n        isScope: isScope,\n        content: elements,\n      });\n    }\n  });\n\n  return orderedTabbables\n    .sort(sortOrderedTabbables)\n    .reduce((acc, sortable) => {\n      sortable.isScope\n        ? acc.push(...sortable.content)\n        : acc.push(sortable.content);\n      return acc;\n    }, [])\n    .concat(regularTabbables);\n};\n\nconst tabbable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorTabbable.bind(null, options),\n        flatten: false,\n        getShadowRoot: options.getShadowRoot,\n        shadowRootFilter: isValidShadowRootTabbable,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorTabbable.bind(null, options)\n    );\n  }\n  return sortByOrder(candidates);\n};\n\nconst focusable = function (container, options) {\n  options = options || {};\n\n  let candidates;\n  if (options.getShadowRoot) {\n    candidates = getCandidatesIteratively(\n      [container],\n      options.includeContainer,\n      {\n        filter: isNodeMatchingSelectorFocusable.bind(null, options),\n        flatten: true,\n        getShadowRoot: options.getShadowRoot,\n      }\n    );\n  } else {\n    candidates = getCandidates(\n      container,\n      options.includeContainer,\n      isNodeMatchingSelectorFocusable.bind(null, options)\n    );\n  }\n\n  return candidates;\n};\n\nconst isTabbable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, candidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorTabbable(options, node);\n};\n\nconst focusableCandidateSelector = /* #__PURE__ */ candidateSelectors\n  .concat('iframe')\n  .join(',');\n\nconst isFocusable = function (node, options) {\n  options = options || {};\n  if (!node) {\n    throw new Error('No node provided');\n  }\n  if (matches.call(node, focusableCandidateSelector) === false) {\n    return false;\n  }\n  return isNodeMatchingSelectorFocusable(options, node);\n};\n\nexport { tabbable, focusable, isTabbable, isFocusable, getTabIndex };\n", "'use client';\n\nimport * as React from 'react';\nimport { SafeReact } from \"./safeReact.js\";\nlet globalId = 0;\n\n// TODO React 17: Remove `useGlobalId` once React 17 support is removed\nfunction useGlobalId(idOverride, prefix = 'mui') {\n  const [defaultId, setDefaultId] = React.useState(idOverride);\n  const id = idOverride || defaultId;\n  React.useEffect(() => {\n    if (defaultId == null) {\n      // Fallback to this default id when possible.\n      // Use the incrementing value for client-side rendering only.\n      // We can't use it server-side.\n      // If you want to use random values please consider the Birthday Problem: https://en.wikipedia.org/wiki/Birthday_problem\n      globalId += 1;\n      setDefaultId(`${prefix}-${globalId}`);\n    }\n  }, [defaultId, prefix]);\n  return id;\n}\nconst maybeReactUseId = SafeReact.useId;\n\n/**\n *\n * @example <div id={useId()} />\n * @param idOverride\n * @returns {string}\n */\nexport function useId(idOverride, prefix) {\n  // React.useId() is only available from React 17.0.0.\n  if (maybeReactUseId !== undefined) {\n    const reactId = maybeReactUseId();\n    return idOverride ?? (prefix ? `${prefix}-${reactId}` : reactId);\n  }\n\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler\n  // eslint-disable-next-line react-hooks/rules-of-hooks -- `React.useId` is invariant at runtime.\n  return useGlobalId(idOverride, prefix);\n}", "import * as React from 'react';\n\n// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379\nexport const SafeReact = {\n  ...React\n};", "'use client';\n\nimport { useId } from '@base-ui-components/utils/useId';\n\n/**\n * Wraps `useId` and prefixes generated `id`s with `base-ui-`\n * @param {string | undefined} idOverride overrides the generated id when provided\n * @returns {string | undefined}\n */\nexport function useBaseUiId(idOverride) {\n  return useId(idOverride, 'base-ui');\n}", "'use client';\n\n// TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- process.env never changes, dependency arrays are intentionally ignored\n/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`Base UI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      // Object.is() is not equivalent to the === operator.\n      // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is for more details.\n      if (!isControlled && !Object.is(defaultValue, defaultProp)) {\n        console.error([`Base UI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}", "'use client';\n\nimport { useIsoLayoutEffect } from \"./useIsoLayoutEffect.js\";\nimport { useRefWithInit } from \"./useRefWithInit.js\";\nexport function useLatestRef(value) {\n  const latest = useRefWithInit(createLatestRef, value).current;\n  latest.next = value;\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useIsoLayoutEffect(latest.effect);\n  return latest;\n}\nfunction createLatestRef(value) {\n  const latest = {\n    current: value,\n    next: value,\n    effect: () => {\n      latest.current = latest.next;\n    }\n  };\n  return latest;\n}", "import * as ReactDOM from 'react-dom';\nimport { useIsoLayoutEffect } from '@base-ui-components/utils/useIsoLayoutEffect';\nimport { useLatestRef } from '@base-ui-components/utils/useLatestRef';\nimport { getCombinedFieldValidityData } from \"./utils/getCombinedFieldValidityData.js\";\nimport { useFormContext } from \"../form/FormContext.js\";\nimport { useFieldRootContext } from \"./root/FieldRootContext.js\";\nexport function useField(params) {\n  const {\n    formRef\n  } = useFormContext();\n  const {\n    invalid,\n    markedDirtyRef,\n    validityData,\n    setValidityData\n  } = useFieldRootContext();\n  const {\n    enabled = true,\n    value,\n    id,\n    name,\n    controlRef,\n    commitValidation\n  } = params;\n  const getValueRef = useLatestRef(params.getValue);\n  useIsoLayoutEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    let initialValue = value;\n    if (initialValue === undefined) {\n      initialValue = getValueRef.current?.();\n    }\n    if (validityData.initialValue === null && initialValue !== validityData.initialValue) {\n      setValidityData(prev => ({\n        ...prev,\n        initialValue\n      }));\n    }\n  }, [enabled, setValidityData, value, validityData.initialValue, getValueRef]);\n  useIsoLayoutEffect(() => {\n    if (!enabled) {\n      return;\n    }\n    if (id) {\n      formRef.current.fields.set(id, {\n        controlRef,\n        validityData: getCombinedFieldValidityData(validityData, invalid),\n        validate() {\n          let nextValue = value;\n          if (nextValue === undefined) {\n            nextValue = getValueRef.current?.();\n          }\n          markedDirtyRef.current = true;\n          // Synchronously update the validity state so the submit event can be prevented.\n          ReactDOM.flushSync(() => commitValidation(nextValue));\n        },\n        getValueRef,\n        name\n      });\n    }\n  }, [commitValidation, controlRef, enabled, formRef, getValueRef, id, invalid, markedDirtyRef, name, validityData, value]);\n  useIsoLayoutEffect(() => {\n    const fields = formRef.current.fields;\n    return () => {\n      if (id) {\n        fields.delete(id);\n      }\n    };\n  }, [formRef, id]);\n}", "/**\n * Combines the field's client-side, stateful validity data with the external invalid state to\n * determine the field's true validity.\n */\nexport function getCombinedFieldValidityData(validityData, invalid) {\n  return {\n    ...validityData,\n    state: {\n      ...validityData.state,\n      valid: !invalid && validityData.state.valid\n    }\n  };\n}", "'use client';\n\nimport * as React from 'react';\nconst EMPTY = [];\n\n/**\n * A React.useEffect equivalent that runs once, when the component is mounted.\n */\nexport function useOnMount(fn) {\n  // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- no need to put `fn` in the dependency array\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(fn, EMPTY);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}", "'use client';\n\nimport { useRefWithInit } from \"./useRefWithInit.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nconst EMPTY = 0;\nexport class Timeout {\n  static create() {\n    return new Timeout();\n  }\n  currentId = (() => EMPTY)();\n\n  /**\n   * Executes `fn` after `delay`, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setTimeout(() => {\n      this.currentId = EMPTY;\n      fn();\n    }, delay); /* Node.js types are enabled in development */\n  }\n  isStarted() {\n    return this.currentId !== EMPTY;\n  }\n  clear = () => {\n    if (this.currentId !== EMPTY) {\n      clearTimeout(this.currentId);\n      this.currentId = EMPTY;\n    }\n  };\n  disposeEffect = () => {\n    return this.clear;\n  };\n}\n\n/**\n * A `setTimeout` with automatic cleanup and guard.\n */\nexport function useTimeout() {\n  const timeout = useRefWithInit(Timeout.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}", "'use client';\n\nimport * as React from 'react';\nimport { useTimeout } from '@base-ui-components/utils/useTimeout';\nimport { useEventCallback } from '@base-ui-components/utils/useEventCallback';\nimport { useFieldRootContext } from \"../root/FieldRootContext.js\";\nimport { mergeProps } from \"../../merge-props/index.js\";\nimport { DEFAULT_VALIDITY_STATE } from \"../utils/constants.js\";\nimport { useFormContext } from \"../../form/FormContext.js\";\nimport { getCombinedFieldValidityData } from \"../utils/getCombinedFieldValidityData.js\";\nconst validityKeys = Object.keys(DEFAULT_VALIDITY_STATE);\nfunction isOnlyValueMissing(state) {\n  if (!state || state.valid || !state.valueMissing) {\n    return false;\n  }\n  let onlyValueMissing = false;\n  for (const key of validityKeys) {\n    if (key === 'valid') {\n      continue;\n    }\n    if (key === 'valueMissing') {\n      onlyValueMissing = state[key];\n    }\n    if (state[key]) {\n      onlyValueMissing = false;\n    }\n  }\n  return onlyValueMissing;\n}\nexport function useFieldControlValidation() {\n  const {\n    setValidityData,\n    validate,\n    messageIds,\n    validityData,\n    validationMode,\n    validationDebounceTime,\n    invalid,\n    markedDirtyRef,\n    controlId,\n    state,\n    name\n  } = useFieldRootContext();\n  const {\n    formRef,\n    clearErrors\n  } = useFormContext();\n  const timeout = useTimeout();\n  const inputRef = React.useRef(null);\n  const commitValidation = useEventCallback(async (value, revalidate = false) => {\n    const element = inputRef.current;\n    if (!element) {\n      return;\n    }\n    if (revalidate) {\n      if (state.valid !== false) {\n        return;\n      }\n      const currentNativeValidity = element.validity;\n      if (!currentNativeValidity.valueMissing) {\n        // The 'valueMissing' (required) condition has been resolved by the user typing.\n        // Temporarily mark the field as valid for this onChange event.\n        // Other native errors (e.g., typeMismatch) will be caught by full validation on blur or submit.\n        const nextValidityData = {\n          value,\n          state: {\n            ...DEFAULT_VALIDITY_STATE,\n            valid: true\n          },\n          error: '',\n          errors: [],\n          initialValue: validityData.initialValue\n        };\n        element.setCustomValidity('');\n        if (controlId) {\n          const currentFieldData = formRef.current.fields.get(controlId);\n          if (currentFieldData) {\n            formRef.current.fields.set(controlId, {\n              ...currentFieldData,\n              ...getCombinedFieldValidityData(nextValidityData, false) // invalid = false\n            });\n          }\n        }\n        setValidityData(nextValidityData);\n        return;\n      }\n\n      // Value is still missing, or other conditions apply.\n      // Let's use a representation of current validity for isOnlyValueMissing.\n      const currentNativeValidityObject = validityKeys.reduce((acc, key) => {\n        acc[key] = currentNativeValidity[key];\n        return acc;\n      }, {});\n\n      // If it's (still) natively invalid due to something other than just valueMissing,\n      // then bail from this revalidation on change to avoid \"scolding\" for other errors.\n      if (!currentNativeValidityObject.valid && !isOnlyValueMissing(currentNativeValidityObject)) {\n        return;\n      }\n\n      // If valueMissing is still true AND it's the only issue, or if the field is now natively valid,\n      // let it fall through to the main validation logic below.\n    }\n    function getState(el) {\n      const computedState = validityKeys.reduce((acc, key) => {\n        acc[key] = el.validity[key];\n        return acc;\n      }, {});\n      let hasOnlyValueMissingError = false;\n      for (const key of validityKeys) {\n        if (key === 'valid') {\n          continue;\n        }\n        if (key === 'valueMissing' && computedState[key]) {\n          hasOnlyValueMissingError = true;\n        } else if (computedState[key]) {\n          return computedState;\n        }\n      }\n\n      // Only make `valueMissing` mark the field invalid if it's been changed\n      // to reduce error noise.\n      if (hasOnlyValueMissingError && !markedDirtyRef.current) {\n        computedState.valid = true;\n        computedState.valueMissing = false;\n      }\n      return computedState;\n    }\n    timeout.clear();\n    let result = null;\n    let validationErrors = [];\n    const nextState = getState(element);\n    let defaultValidationMessage;\n    if (element.validationMessage) {\n      defaultValidationMessage = element.validationMessage;\n      validationErrors = [element.validationMessage];\n    } else {\n      const formValues = Array.from(formRef.current.fields.values()).reduce((acc, field) => {\n        if (field.name && field.getValueRef) {\n          acc[field.name] = field.getValueRef.current?.();\n        }\n        return acc;\n      }, {});\n      const resultOrPromise = validate(value, formValues);\n      if (typeof resultOrPromise === 'object' && resultOrPromise !== null && 'then' in resultOrPromise) {\n        result = await resultOrPromise;\n      } else {\n        result = resultOrPromise;\n      }\n      if (result !== null) {\n        nextState.valid = false;\n        nextState.customError = true;\n        if (Array.isArray(result)) {\n          validationErrors = result;\n          element.setCustomValidity(result.join('\\n'));\n        } else if (result) {\n          validationErrors = [result];\n          element.setCustomValidity(result);\n        }\n      }\n    }\n    const nextValidityData = {\n      value,\n      state: nextState,\n      error: defaultValidationMessage ?? (Array.isArray(result) ? result[0] : result ?? ''),\n      errors: validationErrors,\n      initialValue: validityData.initialValue\n    };\n    if (controlId) {\n      const currentFieldData = formRef.current.fields.get(controlId);\n      if (currentFieldData) {\n        formRef.current.fields.set(controlId, {\n          ...currentFieldData,\n          ...getCombinedFieldValidityData(nextValidityData, invalid)\n        });\n      }\n    }\n    setValidityData(nextValidityData);\n  });\n  const getValidationProps = React.useCallback((externalProps = {}) => mergeProps({\n    ...(messageIds.length && {\n      'aria-describedby': messageIds.join(' ')\n    }),\n    ...(state.valid === false && {\n      'aria-invalid': true\n    })\n  }, externalProps), [messageIds, state.valid]);\n  const getInputValidationProps = React.useCallback((externalProps = {}) => mergeProps({\n    onChange(event) {\n      // Workaround for https://github.com/facebook/react/issues/9023\n      if (event.nativeEvent.defaultPrevented) {\n        return;\n      }\n      clearErrors(name);\n      if (validationMode !== 'onChange') {\n        commitValidation(event.currentTarget.value, true);\n        return;\n      }\n      if (invalid) {\n        return;\n      }\n      const element = event.currentTarget;\n      if (element.value === '') {\n        // Ignore the debounce time for empty values.\n        commitValidation(element.value);\n        return;\n      }\n      timeout.clear();\n      if (validationDebounceTime) {\n        timeout.start(validationDebounceTime, () => {\n          commitValidation(element.value);\n        });\n      } else {\n        commitValidation(element.value);\n      }\n    }\n  }, getValidationProps(externalProps)), [getValidationProps, clearErrors, name, timeout, commitValidation, invalid, validationMode, validationDebounceTime]);\n  return React.useMemo(() => ({\n    getValidationProps,\n    getInputValidationProps,\n    inputRef,\n    commitValidation\n  }), [getValidationProps, getInputValidationProps, commitValidation]);\n}"],
  "mappings": "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",
  "names": ["React", "React", "FieldControlDataAttributes", "React", "React", "React", "React", "result", "_jsx", "React", "version", "candidateSelectors", "candidateSelector", "join", "NoElement", "Element", "matches", "prototype", "msMatchesSelector", "webkitMatchesSelector", "getRootNode", "element", "_element$getRootNode", "call", "ownerDocument", "focusableCandidateSelector", "candidateSelectors", "concat", "join", "React", "React", "React", "React", "EMPTY", "React", "nextValidityData"]
}
