{
  "version": 3,
  "sources": ["../../@base-ui-components/react/esm/number-field/index.parts.js", "../../@base-ui-components/react/esm/number-field/root/NumberFieldRoot.js", "../../@base-ui-components/utils/esm/useInterval.js", "../../@base-ui-components/utils/esm/useForcedRerendering.js", "../../@base-ui-components/utils/esm/owner.js", "../../@base-ui-components/react/esm/number-field/root/NumberFieldRootContext.js", "../../@base-ui-components/react/esm/number-field/utils/styleHooks.js", "../../@base-ui-components/react/esm/utils/formatNumber.js", "../../@base-ui-components/react/esm/number-field/utils/parse.js", "../../@base-ui-components/react/esm/number-field/utils/constants.js", "../../@base-ui-components/react/esm/utils/clamp.js", "../../@base-ui-components/react/esm/number-field/utils/validate.js", "../../@base-ui-components/react/esm/number-field/group/NumberFieldGroup.js", "../../@base-ui-components/react/esm/number-field/increment/NumberFieldIncrement.js", "../../@base-ui-components/react/esm/use-button/useButton.js", "../../@base-ui-components/utils/esm/error.js", "../../@base-ui-components/react/esm/composite/root/CompositeRootContext.js", "../../@base-ui-components/react/esm/utils/useFocusableWhenDisabled.js", "../../@base-ui-components/react/esm/number-field/root/useNumberFieldButton.js", "../../@base-ui-components/react/esm/number-field/decrement/NumberFieldDecrement.js", "../../@base-ui-components/react/esm/number-field/input/NumberFieldInput.js", "../../@base-ui-components/react/esm/number-field/scrub-area/NumberFieldScrubArea.js", "../../@base-ui-components/react/esm/number-field/scrub-area/NumberFieldScrubAreaContext.js", "../../@base-ui-components/react/esm/number-field/utils/getViewportRect.js", "../../@base-ui-components/react/esm/number-field/utils/subscribeToVisualViewportResize.js", "../../@base-ui-components/react/esm/number-field/scrub-area-cursor/NumberFieldScrubAreaCursor.js"],
  "sourcesContent": ["export { NumberFieldRoot as Root } from \"./root/NumberFieldRoot.js\";\nexport { NumberFieldGroup as Group } from \"./group/NumberFieldGroup.js\";\nexport { NumberFieldIncrement as Increment } from \"./increment/NumberFieldIncrement.js\";\nexport { NumberFieldDecrement as Decrement } from \"./decrement/NumberFieldDecrement.js\";\nexport { NumberFieldInput as Input } from \"./input/NumberFieldInput.js\";\nexport { NumberFieldScrubArea as ScrubArea } from \"./scrub-area/NumberFieldScrubArea.js\";\nexport { NumberFieldScrubAreaCursor as ScrubAreaCursor } from \"./scrub-area-cursor/NumberFieldScrubAreaCursor.js\";", "'use client';\n\nimport * as React from 'react';\nimport { useControlled } from '@base-ui-components/utils/useControlled';\nimport { useEventCallback } from '@base-ui-components/utils/useEventCallback';\nimport { useTimeout } from '@base-ui-components/utils/useTimeout';\nimport { useInterval } from '@base-ui-components/utils/useInterval';\nimport { useIsoLayoutEffect } from '@base-ui-components/utils/useIsoLayoutEffect';\nimport { useLatestRef } from '@base-ui-components/utils/useLatestRef';\nimport { useForcedRerendering } from '@base-ui-components/utils/useForcedRerendering';\nimport { ownerDocument, ownerWindow } from '@base-ui-components/utils/owner';\nimport { isIOS } from '@base-ui-components/utils/detectBrowser';\nimport { NumberFieldRootContext } from \"./NumberFieldRootContext.js\";\nimport { useFieldRootContext } from \"../../field/root/FieldRootContext.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { getNumberLocaleDetails, PERCENTAGES } from \"../utils/parse.js\";\nimport { formatNumber, formatNumberMaxPrecision } from \"../../utils/formatNumber.js\";\nimport { useBaseUiId } from \"../../utils/useBaseUiId.js\";\nimport { CHANGE_VALUE_TICK_DELAY, DEFAULT_STEP, START_AUTO_CHANGE_DELAY } from \"../utils/constants.js\";\nimport { toValidatedNumber } from \"../utils/validate.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * Groups all parts of the number field and manages its state.\n * Renders a `<div>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldRoot = /*#__PURE__*/React.forwardRef(function NumberFieldRoot(componentProps, forwardedRef) {\n  const {\n    id: idProp,\n    min,\n    max,\n    smallStep = 0.1,\n    step = 1,\n    largeStep = 10,\n    required = false,\n    disabled: disabledProp = false,\n    readOnly = false,\n    name: nameProp,\n    defaultValue,\n    value: valueProp,\n    onValueChange: onValueChangeProp,\n    allowWheelScrub = false,\n    snapOnStep = false,\n    format,\n    locale,\n    render,\n    className,\n    inputRef: inputRefProp,\n    ...elementProps\n  } = componentProps;\n  const {\n    setControlId,\n    setDirty,\n    validityData,\n    setValidityData,\n    disabled: fieldDisabled,\n    setFilled,\n    invalid,\n    name: fieldName,\n    state: fieldState\n  } = useFieldRootContext();\n  const disabled = fieldDisabled || disabledProp;\n  const name = fieldName ?? nameProp;\n  const [isScrubbing, setIsScrubbing] = React.useState(false);\n  const minWithDefault = min ?? Number.MIN_SAFE_INTEGER;\n  const maxWithDefault = max ?? Number.MAX_SAFE_INTEGER;\n  const minWithZeroDefault = min ?? 0;\n  const formatStyle = format?.style;\n  const inputRef = React.useRef(null);\n  const id = useBaseUiId(idProp);\n  useIsoLayoutEffect(() => {\n    setControlId(id);\n    return () => {\n      setControlId(undefined);\n    };\n  }, [id, setControlId]);\n  const [valueUnwrapped, setValueUnwrapped] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'NumberField',\n    state: 'value'\n  });\n  const value = valueUnwrapped ?? null;\n  const valueRef = useLatestRef(value);\n  useIsoLayoutEffect(() => {\n    setFilled(value !== null);\n  }, [setFilled, value]);\n  const forceRender = useForcedRerendering();\n  const formatOptionsRef = useLatestRef(format);\n  const onValueChange = useEventCallback(onValueChangeProp);\n  const startTickTimeout = useTimeout();\n  const tickInterval = useInterval();\n  const intentionalTouchCheckTimeout = useTimeout();\n  const isPressedRef = React.useRef(false);\n  const movesAfterTouchRef = React.useRef(0);\n  const allowInputSyncRef = React.useRef(true);\n  const unsubscribeFromGlobalContextMenuRef = React.useRef(() => {});\n  useIsoLayoutEffect(() => {\n    if (validityData.initialValue === null && value !== validityData.initialValue) {\n      setValidityData(prev => ({\n        ...prev,\n        initialValue: value\n      }));\n    }\n  }, [setValidityData, validityData.initialValue, value]);\n\n  // During SSR, the value is formatted on the server, whose locale may differ from the client's\n  // locale. This causes a hydration mismatch, which we manually suppress. This is preferable to\n  // rendering an empty input field and then updating it with the formatted value, as the user\n  // can still see the value prior to hydration, even if it's not formatted correctly.\n  const [inputValue, setInputValue] = React.useState(() => {\n    if (valueProp !== undefined) {\n      return getControlledInputValue(value, locale, format);\n    }\n    return formatNumber(value, locale, format);\n  });\n  const [inputMode, setInputMode] = React.useState('numeric');\n  const getAllowedNonNumericKeys = useEventCallback(() => {\n    const {\n      decimal,\n      group,\n      currency\n    } = getNumberLocaleDetails(locale, format);\n    const keys = new Set(['.', ',', decimal, group]);\n    if (formatStyle === 'percent') {\n      PERCENTAGES.forEach(key => keys.add(key));\n    }\n    if (formatStyle === 'currency' && currency) {\n      keys.add(currency);\n    }\n    if (minWithDefault < 0) {\n      keys.add('-');\n    }\n    return keys;\n  });\n  const getStepAmount = useEventCallback(event => {\n    if (event?.altKey) {\n      return smallStep;\n    }\n    if (event?.shiftKey) {\n      return largeStep;\n    }\n    return step;\n  });\n  const setValue = useEventCallback((unvalidatedValue, event, dir) => {\n    const eventWithOptionalKeyState = event;\n    const validatedValue = toValidatedNumber(unvalidatedValue, {\n      step: dir ? getStepAmount(eventWithOptionalKeyState) * dir : undefined,\n      format: formatOptionsRef.current,\n      minWithDefault,\n      maxWithDefault,\n      minWithZeroDefault,\n      snapOnStep,\n      small: eventWithOptionalKeyState?.altKey ?? false\n    });\n    onValueChange?.(validatedValue, event && 'nativeEvent' in event ? event.nativeEvent : event);\n    setValueUnwrapped(validatedValue);\n    setDirty(validatedValue !== validityData.initialValue);\n\n    // Keep the visible input in sync immediately when programmatic changes occur\n    // (increment/decrement, wheel, etc). During direct typing we don't want\n    // to overwrite the user-provided text until blur, so we gate on\n    // `allowInputSyncRef`.\n    if (allowInputSyncRef.current) {\n      setInputValue(formatNumber(validatedValue, locale, format));\n    }\n\n    // Formatting can change even if the numeric value hasn't, so ensure a re-render when needed.\n    forceRender();\n  });\n  const incrementValue = useEventCallback((amount, dir, currentValue, event) => {\n    const prevValue = currentValue == null ? valueRef.current : currentValue;\n    const nextValue = typeof prevValue === 'number' ? prevValue + amount * dir : Math.max(0, min ?? 0);\n    setValue(nextValue, event, dir);\n  });\n  const stopAutoChange = useEventCallback(() => {\n    intentionalTouchCheckTimeout.clear();\n    startTickTimeout.clear();\n    tickInterval.clear();\n    unsubscribeFromGlobalContextMenuRef.current();\n    movesAfterTouchRef.current = 0;\n  });\n  const startAutoChange = useEventCallback((isIncrement, triggerEvent) => {\n    stopAutoChange();\n    if (!inputRef.current) {\n      return;\n    }\n    const win = ownerWindow(inputRef.current);\n    function handleContextMenu(event) {\n      event.preventDefault();\n    }\n\n    // A global context menu is necessary to prevent the context menu from appearing when the touch\n    // is slightly outside of the element's hit area.\n    win.addEventListener('contextmenu', handleContextMenu);\n    unsubscribeFromGlobalContextMenuRef.current = () => {\n      win.removeEventListener('contextmenu', handleContextMenu);\n    };\n    win.addEventListener('pointerup', () => {\n      isPressedRef.current = false;\n      stopAutoChange();\n    }, {\n      once: true\n    });\n    function tick() {\n      const amount = getStepAmount(triggerEvent) ?? DEFAULT_STEP;\n      incrementValue(amount, isIncrement ? 1 : -1, undefined, triggerEvent);\n    }\n    tick();\n    startTickTimeout.start(START_AUTO_CHANGE_DELAY, () => {\n      tickInterval.start(CHANGE_VALUE_TICK_DELAY, tick);\n    });\n  });\n\n  // We need to update the input value when the external `value` prop changes. This ends up acting\n  // as a single source of truth to update the input value, bypassing the need to manually set it in\n  // each event handler internally in this hook.\n  // This is done inside a layout effect as an alternative to the technique to set state during\n  // render as we're accessing a ref, which must be inside an effect.\n  // https://react.dev/learn/you-might-not-need-an-effect#adjusting-some-state-when-a-prop-changes\n  //\n  // ESLint is disabled because it needs to run even if the parsed value hasn't changed, since the\n  // value still can be formatted differently.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useIsoLayoutEffect(function syncFormattedInputValueOnValueChange() {\n    // This ensures the value is only updated on blur rather than every keystroke, but still\n    // allows the input value to be updated when the value is changed externally.\n    if (!allowInputSyncRef.current) {\n      return;\n    }\n    const nextInputValue = valueProp !== undefined ? getControlledInputValue(value, locale, format) : formatNumber(value, locale, format);\n    if (nextInputValue !== inputValue) {\n      setInputValue(nextInputValue);\n    }\n  });\n  useIsoLayoutEffect(function setDynamicInputModeForIOS() {\n    if (!isIOS) {\n      return;\n    }\n\n    // iOS numeric software keyboard doesn't have a minus key, so we need to use the default\n    // keyboard to let the user input a negative number.\n    let computedInputMode = 'text';\n    if (minWithDefault >= 0) {\n      // iOS numeric software keyboard doesn't have a decimal key for \"numeric\" input mode, but\n      // this is better than the \"text\" input if possible to use.\n      computedInputMode = 'decimal';\n    }\n    setInputMode(computedInputMode);\n  }, [minWithDefault, formatStyle]);\n  React.useEffect(() => {\n    return () => stopAutoChange();\n  }, [stopAutoChange]);\n\n  // The `onWheel` prop can't be prevented, so we need to use a global event listener.\n  React.useEffect(function registerElementWheelListener() {\n    const element = inputRef.current;\n    if (disabled || readOnly || !allowWheelScrub || !element) {\n      return undefined;\n    }\n    function handleWheel(event) {\n      if (\n      // Allow pinch-zooming.\n      event.ctrlKey || ownerDocument(inputRef.current).activeElement !== inputRef.current) {\n        return;\n      }\n\n      // Prevent the default behavior to avoid scrolling the page.\n      event.preventDefault();\n      const amount = getStepAmount(event) ?? DEFAULT_STEP;\n      incrementValue(amount, event.deltaY > 0 ? -1 : 1, undefined, event);\n    }\n    element.addEventListener('wheel', handleWheel);\n    return () => {\n      element.removeEventListener('wheel', handleWheel);\n    };\n  }, [allowWheelScrub, incrementValue, disabled, readOnly, largeStep, step, getStepAmount]);\n  const state = React.useMemo(() => ({\n    ...fieldState,\n    disabled,\n    readOnly,\n    required,\n    value,\n    inputValue,\n    scrubbing: isScrubbing\n  }), [fieldState, disabled, readOnly, required, value, inputValue, isScrubbing]);\n  const contextValue = React.useMemo(() => ({\n    inputRef,\n    inputValue,\n    value,\n    startAutoChange,\n    stopAutoChange,\n    minWithDefault,\n    maxWithDefault,\n    disabled,\n    readOnly,\n    id,\n    setValue,\n    incrementValue,\n    getStepAmount,\n    allowInputSyncRef,\n    formatOptionsRef,\n    valueRef,\n    isPressedRef,\n    intentionalTouchCheckTimeout,\n    movesAfterTouchRef,\n    name,\n    required,\n    invalid,\n    inputMode,\n    getAllowedNonNumericKeys,\n    min,\n    max,\n    setInputValue,\n    locale,\n    isScrubbing,\n    setIsScrubbing,\n    state\n  }), [inputRef, inputValue, value, startAutoChange, stopAutoChange, minWithDefault, maxWithDefault, disabled, readOnly, id, setValue, incrementValue, getStepAmount, allowInputSyncRef, formatOptionsRef, valueRef, isPressedRef, intentionalTouchCheckTimeout, movesAfterTouchRef, name, required, invalid, inputMode, getAllowedNonNumericKeys, min, max, setInputValue, locale, isScrubbing, state]);\n  const element = useRenderElement('div', componentProps, {\n    ref: forwardedRef,\n    state,\n    props: elementProps,\n    customStyleHookMapping: styleHookMapping\n  });\n  return /*#__PURE__*/_jsxs(NumberFieldRootContext.Provider, {\n    value: contextValue,\n    children: [element, name && /*#__PURE__*/_jsx(\"input\", {\n      type: \"hidden\",\n      name: name,\n      ref: inputRefProp,\n      value: value ?? '',\n      disabled: disabled,\n      required: required\n    })]\n  });\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldRoot.displayName = \"NumberFieldRoot\";\nfunction getControlledInputValue(value, locale, format) {\n  const explicitPrecision = format?.maximumFractionDigits != null || format?.minimumFractionDigits != null;\n  return explicitPrecision ? formatNumber(value, locale, format) : formatNumberMaxPrecision(value, locale, format);\n}", "'use client';\n\nimport { useRefWithInit } from \"./useRefWithInit.js\";\nimport { useOnMount } from \"./useOnMount.js\";\nimport { Timeout } from \"./useTimeout.js\";\nconst EMPTY = 0;\nexport class Interval extends Timeout {\n  static create() {\n    return new Interval();\n  }\n\n  /**\n   * Executes `fn` at `delay` interval, clearing any previously scheduled call.\n   */\n  start(delay, fn) {\n    this.clear();\n    this.currentId = setInterval(() => {\n      fn();\n    }, delay);\n  }\n  clear = () => {\n    if (this.currentId !== EMPTY) {\n      clearInterval(this.currentId);\n      this.currentId = EMPTY;\n    }\n  };\n}\n\n/**\n * A `setInterval` with automatic cleanup and guard.\n */\nexport function useInterval() {\n  const timeout = useRefWithInit(Interval.create).current;\n  useOnMount(timeout.disposeEffect);\n  return timeout;\n}", "'use client';\n\nimport * as React from 'react';\n\n/**\n * Returns a function that forces a rerender.\n */\nexport function useForcedRerendering() {\n  const [, setState] = React.useState({});\n  return React.useCallback(() => {\n    setState({});\n  }, []);\n}", "export { getWindow as ownerWindow } from '@floating-ui/utils/dom';\nexport function ownerDocument(node) {\n  return node?.ownerDocument || document;\n}", "'use client';\n\nimport * as React from 'react';\nexport const NumberFieldRootContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== \"production\") NumberFieldRootContext.displayName = \"NumberFieldRootContext\";\nexport function useNumberFieldRootContext() {\n  const context = React.useContext(NumberFieldRootContext);\n  if (context === undefined) {\n    throw new Error('Base UI: NumberFieldRootContext is missing. NumberField parts must be placed within <NumberField.Root>.');\n  }\n  return context;\n}", "export const styleHookMapping = {\n  inputValue: () => null,\n  value: () => null\n};", "export const cache = new Map();\nexport function getFormatter(locale, options) {\n  const optionsString = JSON.stringify({\n    locale,\n    options\n  });\n  const cachedFormatter = cache.get(optionsString);\n  if (cachedFormatter) {\n    return cachedFormatter;\n  }\n  const formatter = new Intl.NumberFormat(locale, options);\n  cache.set(optionsString, formatter);\n  return formatter;\n}\nexport function formatNumber(value, locale, options) {\n  if (value == null) {\n    return '';\n  }\n  return getFormatter(locale, options).format(value);\n}\nexport function formatNumberMaxPrecision(value, locale, options) {\n  return formatNumber(value, locale, {\n    ...options,\n    maximumFractionDigits: 20\n  });\n}", "import { getFormatter } from \"../../utils/formatNumber.js\";\nexport const HAN_NUMERALS = ['零', '一', '二', '三', '四', '五', '六', '七', '八', '九'];\nexport const ARABIC_NUMERALS = ['٠', '١', '٢', '٣', '٤', '٥', '٦', '٧', '٨', '٩'];\nexport const PERCENTAGES = ['%', '٪'];\nexport const ARABIC_RE = new RegExp(`[${ARABIC_NUMERALS.join('')}]`, 'g');\nexport const HAN_RE = new RegExp(`[${HAN_NUMERALS.join('')}]`, 'g');\nexport const PERCENT_RE = new RegExp(`[${PERCENTAGES.join('')}]`);\nexport function getNumberLocaleDetails(locale, options) {\n  const parts = getFormatter(locale, options).formatToParts(11111.1);\n  const result = {};\n  parts.forEach(part => {\n    result[part.type] = part.value;\n  });\n\n  // The formatting options may result in not returning a decimal.\n  getFormatter(locale).formatToParts(0.1).forEach(part => {\n    if (part.type === 'decimal') {\n      result[part.type] = part.value;\n    }\n  });\n  return result;\n}\nexport function parseNumber(formattedNumber, locale, options) {\n  let computedLocale = locale;\n  if (computedLocale === undefined) {\n    if (ARABIC_RE.test(formattedNumber)) {\n      computedLocale = 'ar';\n    } else if (HAN_RE.test(formattedNumber)) {\n      computedLocale = 'zh';\n    }\n  }\n  const {\n    group,\n    decimal,\n    currency,\n    unit\n  } = getNumberLocaleDetails(computedLocale, options);\n  let groupRegex = null;\n  if (group) {\n    // Check if the group separator is a space-like character.\n    // If so, we'll replace all such characters with an empty string.\n    groupRegex = /\\p{Zs}/u.test(group) ? /\\p{Zs}/gu : new RegExp(`\\\\${group}`, 'g');\n  }\n  const regexesToReplace = [{\n    regex: group ? groupRegex : null,\n    replacement: ''\n  }, {\n    regex: decimal ? new RegExp(`\\\\${decimal}`, 'g') : null,\n    replacement: '.'\n  }, {\n    regex: currency ? new RegExp(`\\\\${currency}`, 'g') : null,\n    replacement: ''\n  }, {\n    regex: unit ? new RegExp(`\\\\${unit}`, 'g') : null,\n    replacement: ''\n  }, {\n    regex: ARABIC_RE,\n    replacement: match => ARABIC_NUMERALS.indexOf(match).toString()\n  }, {\n    regex: HAN_RE,\n    replacement: match => HAN_NUMERALS.indexOf(match).toString()\n  }];\n  const unformattedNumber = regexesToReplace.reduce((acc, {\n    regex,\n    replacement\n  }) => {\n    if (!regex) {\n      return acc;\n    }\n    return acc.replace(regex, replacement);\n  }, formattedNumber);\n  let num = parseFloat(unformattedNumber);\n  const style = options?.style;\n  const isUnitPercent = style === 'unit' && options?.unit === 'percent';\n  const isPercent = PERCENT_RE.test(formattedNumber) || style === 'percent';\n  if (!isUnitPercent && isPercent) {\n    num /= 100;\n  }\n  if (Number.isNaN(num)) {\n    return null;\n  }\n  return num;\n}", "export const CHANGE_VALUE_TICK_DELAY = 60;\nexport const START_AUTO_CHANGE_DELAY = 400;\nexport const TOUCH_TIMEOUT = 50;\nexport const MAX_POINTER_MOVES_AFTER_TOUCH = 3;\nexport const SCROLLING_POINTER_MOVE_DISTANCE = 8;\nexport const DEFAULT_STEP = 1;", "export function clamp(val, min = Number.MIN_SAFE_INTEGER, max = Number.MAX_SAFE_INTEGER) {\n  return Math.max(min, Math.min(val, max));\n}", "import { getFormatter } from \"../../utils/formatNumber.js\";\nimport { clamp } from \"../../utils/clamp.js\";\nexport function removeFloatingPointErrors(value, format = {}) {\n  return parseFloat(getFormatter('en-US', {\n    maximumFractionDigits: format.maximumFractionDigits,\n    minimumFractionDigits: format.minimumFractionDigits,\n    useGrouping: false\n  }).format(value));\n}\nexport function toValidatedNumber(value, {\n  step,\n  minWithDefault,\n  maxWithDefault,\n  minWithZeroDefault,\n  format,\n  snapOnStep,\n  small\n}) {\n  if (value === null) {\n    return value;\n  }\n  const clampedValue = clamp(value, minWithDefault, maxWithDefault);\n  if (step != null && snapOnStep) {\n    if (small) {\n      const stepsFromMin = (clampedValue - minWithZeroDefault) / step;\n      const roundedSteps = Math.round(stepsFromMin);\n      const snappedValue = minWithZeroDefault + roundedSteps * step;\n      return removeFloatingPointErrors(snappedValue, format);\n    }\n\n    // If a real minimum is provided, use it\n    const base = minWithDefault !== Number.MIN_SAFE_INTEGER ? minWithDefault : minWithZeroDefault;\n    if (step > 0) {\n      // \"Undo\" the increment by subtracting step, then snap.\n      const unsnapped = clampedValue - step;\n      const steps = Math.floor((unsnapped - base) / step);\n      // Reapply the increment by adding step\n      return removeFloatingPointErrors(base + steps * step + step, format);\n    }\n    if (step < 0) {\n      const absStep = Math.abs(step);\n      const unsnapped = clampedValue - step;\n      const steps = Math.ceil((unsnapped - base) / absStep);\n      return removeFloatingPointErrors(base + steps * absStep + step, format);\n    }\n  }\n  return removeFloatingPointErrors(clampedValue, format);\n}", "'use client';\n\nimport * as React from 'react';\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\n\n/**\n * Groups the input with the increment and decrement buttons.\n * Renders a `<div>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldGroup = /*#__PURE__*/React.forwardRef(function NumberFieldGroup(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    ...elementProps\n  } = componentProps;\n  const {\n    state\n  } = useNumberFieldRootContext();\n  const element = useRenderElement('div', componentProps, {\n    ref: forwardedRef,\n    state,\n    props: [{\n      role: 'group'\n    }, elementProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldGroup.displayName = \"NumberFieldGroup\";", "'use client';\n\nimport * as React from 'react';\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { useButton } from \"../../use-button/index.js\";\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { useNumberFieldButton } from \"../root/useNumberFieldButton.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\n\n/**\n * A stepper button that increases the field value when clicked.\n * Renders an `<button>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldIncrement = /*#__PURE__*/React.forwardRef(function NumberFieldIncrement(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    disabled: disabledProp = false,\n    nativeButton = true,\n    ...elementProps\n  } = componentProps;\n  const {\n    allowInputSyncRef,\n    disabled: contextDisabled,\n    formatOptionsRef,\n    getStepAmount,\n    id,\n    incrementValue,\n    inputRef,\n    inputValue,\n    intentionalTouchCheckTimeout,\n    isPressedRef,\n    locale,\n    maxWithDefault,\n    minWithDefault,\n    movesAfterTouchRef,\n    readOnly,\n    setValue,\n    startAutoChange,\n    state,\n    stopAutoChange,\n    value,\n    valueRef\n  } = useNumberFieldRootContext();\n  const disabled = disabledProp || contextDisabled;\n  const {\n    props\n  } = useNumberFieldButton({\n    isIncrement: true,\n    inputRef,\n    startAutoChange,\n    stopAutoChange,\n    minWithDefault,\n    maxWithDefault,\n    value,\n    inputValue,\n    disabled,\n    readOnly,\n    id,\n    setValue,\n    getStepAmount,\n    incrementValue,\n    allowInputSyncRef,\n    formatOptionsRef,\n    valueRef,\n    isPressedRef,\n    intentionalTouchCheckTimeout,\n    movesAfterTouchRef,\n    locale\n  });\n  const {\n    getButtonProps,\n    buttonRef\n  } = useButton({\n    disabled,\n    native: nativeButton\n  });\n  const buttonState = React.useMemo(() => ({\n    ...state,\n    disabled\n  }), [state, disabled]);\n  const element = useRenderElement('button', componentProps, {\n    ref: [forwardedRef, buttonRef],\n    state: buttonState,\n    props: [props, elementProps, getButtonProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldIncrement.displayName = \"NumberFieldIncrement\";", "'use client';\n\nimport * as React from 'react';\nimport { useEventCallback } from '@base-ui-components/utils/useEventCallback';\nimport { error } from '@base-ui-components/utils/error';\nimport { useIsoLayoutEffect } from '@base-ui-components/utils/useIsoLayoutEffect';\nimport { makeEventPreventable, mergeProps } from \"../merge-props/index.js\";\nimport { useCompositeRootContext } from \"../composite/root/CompositeRootContext.js\";\nimport { useFocusableWhenDisabled } from \"../utils/useFocusableWhenDisabled.js\";\nexport function useButton(parameters = {}) {\n  const {\n    disabled = false,\n    focusableWhenDisabled,\n    tabIndex = 0,\n    native: isNativeButton = true\n  } = parameters;\n  const buttonRef = React.useRef(null);\n  const isCompositeItem = useCompositeRootContext(true) !== undefined;\n  const isValidLink = useEventCallback(() => {\n    const element = buttonRef.current;\n    return Boolean(element?.tagName === 'A' && element?.href);\n  });\n  const {\n    props: focusableWhenDisabledProps\n  } = useFocusableWhenDisabled({\n    focusableWhenDisabled,\n    disabled,\n    composite: isCompositeItem,\n    tabIndex,\n    isNativeButton\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!buttonRef.current) {\n        return;\n      }\n      const isButtonTag = buttonRef.current.tagName === 'BUTTON';\n      if (isNativeButton) {\n        if (!isButtonTag) {\n          error('A component that acts as a button was not rendered as a native <button>, which does not match the default. Ensure that the element passed to the `render` prop of the component is a real <button>, or set the `nativeButton` prop on the component to `false`.');\n        }\n      } else if (isButtonTag) {\n        error('A component that acts as a button was rendered as a native <button>, which does not match the default. Ensure that the element passed to the `render` prop of the component is not a real <button>, or set the `nativeButton` prop on the component to `true`.');\n      }\n    }, [isNativeButton]);\n  }\n\n  // handles a disabled composite button rendering another button, e.g.\n  // <Toolbar.Button disabled render={<Menu.Trigger />} />\n  // the `disabled` prop needs to pass through 2 `useButton`s then finally\n  // delete the `disabled` attribute from DOM\n  useIsoLayoutEffect(() => {\n    const element = buttonRef.current;\n    if (!(element instanceof HTMLButtonElement)) {\n      return;\n    }\n    if (isCompositeItem && disabled && focusableWhenDisabledProps.disabled === undefined && element.disabled) {\n      element.disabled = false;\n    }\n  }, [disabled, focusableWhenDisabledProps.disabled, isCompositeItem]);\n  const getButtonProps = React.useCallback((externalProps = {}) => {\n    const {\n      onClick: externalOnClick,\n      onMouseDown: externalOnMouseDown,\n      onKeyUp: externalOnKeyUp,\n      onKeyDown: externalOnKeyDown,\n      onPointerDown: externalOnPointerDown,\n      ...otherExternalProps\n    } = externalProps;\n    const type = isNativeButton ? 'button' : undefined;\n    return mergeProps({\n      type,\n      onClick(event) {\n        if (disabled) {\n          event.preventDefault();\n          return;\n        }\n        externalOnClick?.(event);\n      },\n      onMouseDown(event) {\n        if (!disabled) {\n          externalOnMouseDown?.(event);\n        }\n      },\n      onKeyDown(event) {\n        if (!disabled) {\n          makeEventPreventable(event);\n          externalOnKeyDown?.(event);\n        }\n        if (event.baseUIHandlerPrevented) {\n          return;\n        }\n        const shouldClick = event.target === event.currentTarget && !isNativeButton && !isValidLink() && !disabled;\n        const isEnterKey = event.key === 'Enter';\n        const isSpaceKey = event.key === ' ';\n\n        // Keyboard accessibility for non interactive elements\n        if (shouldClick) {\n          if (isSpaceKey || isEnterKey) {\n            event.preventDefault();\n          }\n          if (isEnterKey) {\n            externalOnClick?.(event);\n          }\n        }\n      },\n      onKeyUp(event) {\n        // calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed\n        // https://codesandbox.io/p/sandbox/button-keyup-preventdefault-dn7f0\n        // Keyboard accessibility for non interactive elements\n        if (!disabled) {\n          makeEventPreventable(event);\n          externalOnKeyUp?.(event);\n        }\n        if (event.baseUIHandlerPrevented) {\n          return;\n        }\n        if (event.target === event.currentTarget && !isNativeButton && !disabled && event.key === ' ') {\n          externalOnClick?.(event);\n        }\n      },\n      onPointerDown(event) {\n        if (disabled) {\n          event.preventDefault();\n          return;\n        }\n        externalOnPointerDown?.(event);\n      }\n    }, !isNativeButton ? {\n      role: 'button'\n    } : undefined, focusableWhenDisabledProps, otherExternalProps);\n  }, [disabled, focusableWhenDisabledProps, isNativeButton, isValidLink]);\n  return {\n    getButtonProps,\n    buttonRef\n  };\n}", "let set;\nif (process.env.NODE_ENV !== 'production') {\n  set = new Set();\n}\nexport function error(...messages) {\n  if (process.env.NODE_ENV !== 'production') {\n    const messageKey = messages.join(' ');\n    if (!set.has(messageKey)) {\n      set.add(messageKey);\n      console.error(`Base UI: ${messageKey}`);\n    }\n  }\n}", "'use client';\n\nimport * as React from 'react';\nexport const CompositeRootContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== \"production\") CompositeRootContext.displayName = \"CompositeRootContext\";\nexport function useCompositeRootContext(optional = false) {\n  const context = React.useContext(CompositeRootContext);\n  if (context === undefined && !optional) {\n    throw new Error('Base UI: CompositeRootContext is missing. Composite parts must be placed within <Composite.Root>.');\n  }\n  return context;\n}", "'use client';\n\nimport * as React from 'react';\nexport function useFocusableWhenDisabled(parameters) {\n  const {\n    focusableWhenDisabled,\n    disabled,\n    composite = false,\n    tabIndex: tabIndexProp = 0,\n    isNativeButton\n  } = parameters;\n  const isFocusableComposite = composite && focusableWhenDisabled !== false;\n  const isNonFocusableComposite = composite && focusableWhenDisabled === false;\n\n  // we can't explicitly assign `undefined` to any of these props because it\n  // would otherwise prevent subsequently merged props from setting them\n  const props = React.useMemo(() => {\n    const additionalProps = {\n      // allow Tabbing away from focusableWhenDisabled elements\n      onKeyDown(event) {\n        if (disabled && focusableWhenDisabled && event.key !== 'Tab') {\n          event.preventDefault();\n        }\n      }\n    };\n    if (!composite) {\n      additionalProps.tabIndex = tabIndexProp;\n      if (!isNativeButton && disabled) {\n        additionalProps.tabIndex = focusableWhenDisabled ? tabIndexProp : -1;\n      }\n    }\n    if (isNativeButton && (focusableWhenDisabled || isFocusableComposite) || !isNativeButton && disabled) {\n      additionalProps['aria-disabled'] = disabled;\n    }\n    if (isNativeButton && (!focusableWhenDisabled || isNonFocusableComposite)) {\n      additionalProps.disabled = disabled;\n    }\n    return additionalProps;\n  }, [composite, disabled, focusableWhenDisabled, isFocusableComposite, isNonFocusableComposite, isNativeButton, tabIndexProp]);\n  return {\n    props\n  };\n}", "'use client';\n\nimport * as React from 'react';\nimport { useEventCallback } from '@base-ui-components/utils/useEventCallback';\nimport { DEFAULT_STEP, MAX_POINTER_MOVES_AFTER_TOUCH, SCROLLING_POINTER_MOVE_DISTANCE, TOUCH_TIMEOUT } from \"../utils/constants.js\";\nimport { parseNumber } from \"../utils/parse.js\";\nexport function useNumberFieldButton(params) {\n  const {\n    allowInputSyncRef,\n    disabled,\n    formatOptionsRef,\n    getStepAmount,\n    id,\n    incrementValue,\n    inputRef,\n    inputValue,\n    intentionalTouchCheckTimeout,\n    isIncrement,\n    isPressedRef,\n    locale,\n    maxWithDefault,\n    minWithDefault,\n    movesAfterTouchRef,\n    readOnly,\n    setValue,\n    startAutoChange,\n    stopAutoChange,\n    value,\n    valueRef\n  } = params;\n  const incrementDownCoordsRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const isTouchingButtonRef = React.useRef(false);\n  const ignoreClickRef = React.useRef(false);\n  const pointerTypeRef = React.useRef('');\n  const isMin = value != null && value <= minWithDefault;\n  const isMax = value != null && value >= maxWithDefault;\n  const commitValue = useEventCallback(nativeEvent => {\n    allowInputSyncRef.current = true;\n\n    // The input may be dirty but not yet blurred, so the value won't have been committed.\n    const parsedValue = parseNumber(inputValue, locale, formatOptionsRef.current);\n    if (parsedValue !== null) {\n      // The increment value function needs to know the current input value to increment it\n      // correctly.\n      valueRef.current = parsedValue;\n      setValue(parsedValue, nativeEvent);\n    }\n  });\n  const props = React.useMemo(() => ({\n    disabled: disabled || (isIncrement ? isMax : isMin),\n    'aria-readonly': readOnly || undefined,\n    'aria-label': isIncrement ? 'Increase' : 'Decrease',\n    'aria-controls': id,\n    // Keyboard users shouldn't have access to the buttons, since they can use the input element\n    // to change the value. On the other hand, `aria-hidden` is not applied because touch screen\n    // readers should be able to use the buttons.\n    tabIndex: -1,\n    style: {\n      WebkitUserSelect: 'none',\n      userSelect: 'none'\n    },\n    onTouchStart() {\n      isTouchingButtonRef.current = true;\n    },\n    onTouchEnd() {\n      isTouchingButtonRef.current = false;\n    },\n    onClick(event) {\n      const isDisabled = disabled || readOnly || (isIncrement ? isMax : isMin);\n      if (event.defaultPrevented || isDisabled || (\n      // If it's not a keyboard/virtual click, ignore.\n      pointerTypeRef.current === 'touch' ? ignoreClickRef.current : event.detail !== 0)) {\n        return;\n      }\n      commitValue(event.nativeEvent);\n      const amount = getStepAmount(event) ?? DEFAULT_STEP;\n      incrementValue(amount, isIncrement ? 1 : -1, undefined, event.nativeEvent);\n    },\n    onPointerDown(event) {\n      const isMainButton = !event.button || event.button === 0;\n      const isDisabled = disabled || (isIncrement ? isMax : isMin);\n      if (event.defaultPrevented || readOnly || !isMainButton || isDisabled) {\n        return;\n      }\n      pointerTypeRef.current = event.pointerType;\n      ignoreClickRef.current = false;\n      isPressedRef.current = true;\n      incrementDownCoordsRef.current = {\n        x: event.clientX,\n        y: event.clientY\n      };\n      commitValue(event.nativeEvent);\n\n      // Note: \"pen\" is sometimes returned for mouse usage on Linux Chrome.\n      if (event.pointerType !== 'touch') {\n        event.preventDefault();\n        inputRef.current?.focus();\n        startAutoChange(isIncrement, event);\n      } else {\n        // We need to check if the pointerdown was intentional, and not the result of a scroll\n        // or pinch-zoom. In that case, we don't want to change the value.\n        intentionalTouchCheckTimeout.start(TOUCH_TIMEOUT, () => {\n          const moves = movesAfterTouchRef.current;\n          movesAfterTouchRef.current = 0;\n          if (moves != null && moves < MAX_POINTER_MOVES_AFTER_TOUCH) {\n            ignoreClickRef.current = true;\n            startAutoChange(isIncrement, event);\n          } else {\n            stopAutoChange();\n          }\n        });\n      }\n    },\n    onPointerMove(event) {\n      const isDisabled = disabled || readOnly || (isIncrement ? isMax : isMin);\n      if (isDisabled || event.pointerType !== 'touch' || !isPressedRef.current) {\n        return;\n      }\n      if (movesAfterTouchRef.current != null) {\n        movesAfterTouchRef.current += 1;\n      }\n      const {\n        x,\n        y\n      } = incrementDownCoordsRef.current;\n      const dx = x - event.clientX;\n      const dy = y - event.clientY;\n\n      // An alternative to this technique is to detect when the NumberField's parent container\n      // has been scrolled\n      if (dx ** 2 + dy ** 2 > SCROLLING_POINTER_MOVE_DISTANCE ** 2) {\n        stopAutoChange();\n      }\n    },\n    onMouseEnter(event) {\n      const isDisabled = disabled || readOnly || (isIncrement ? isMax : isMin);\n      if (event.defaultPrevented || isDisabled || !isPressedRef.current || isTouchingButtonRef.current) {\n        return;\n      }\n      startAutoChange(isIncrement, event);\n    },\n    onMouseLeave() {\n      if (isTouchingButtonRef.current) {\n        return;\n      }\n      stopAutoChange();\n    },\n    onMouseUp() {\n      if (isTouchingButtonRef.current) {\n        return;\n      }\n      stopAutoChange();\n    }\n  }), [commitValue, disabled, getStepAmount, id, incrementValue, inputRef, isIncrement, intentionalTouchCheckTimeout, isMax, isMin, isPressedRef, movesAfterTouchRef, readOnly, startAutoChange, stopAutoChange]);\n  return React.useMemo(() => ({\n    props\n  }), [props]);\n}", "'use client';\n\nimport * as React from 'react';\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { useButton } from \"../../use-button/index.js\";\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { useNumberFieldButton } from \"../root/useNumberFieldButton.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\n\n/**\n * A stepper button that decreases the field value when clicked.\n * Renders an `<button>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldDecrement = /*#__PURE__*/React.forwardRef(function NumberFieldDecrement(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    disabled: disabledProp = false,\n    nativeButton = true,\n    ...elementProps\n  } = componentProps;\n  const {\n    allowInputSyncRef,\n    disabled: contextDisabled,\n    formatOptionsRef,\n    getStepAmount,\n    id,\n    incrementValue,\n    inputRef,\n    inputValue,\n    intentionalTouchCheckTimeout,\n    isPressedRef,\n    maxWithDefault,\n    minWithDefault,\n    movesAfterTouchRef,\n    readOnly,\n    setValue,\n    startAutoChange,\n    state,\n    stopAutoChange,\n    value,\n    valueRef,\n    locale\n  } = useNumberFieldRootContext();\n  const disabled = disabledProp || contextDisabled;\n  const {\n    props\n  } = useNumberFieldButton({\n    isIncrement: false,\n    inputRef,\n    startAutoChange,\n    stopAutoChange,\n    minWithDefault,\n    maxWithDefault,\n    value,\n    inputValue,\n    disabled,\n    readOnly,\n    id,\n    setValue,\n    getStepAmount,\n    incrementValue,\n    allowInputSyncRef,\n    formatOptionsRef,\n    valueRef,\n    isPressedRef,\n    intentionalTouchCheckTimeout,\n    movesAfterTouchRef,\n    locale\n  });\n  const {\n    getButtonProps,\n    buttonRef\n  } = useButton({\n    disabled,\n    native: nativeButton\n  });\n  const buttonState = React.useMemo(() => ({\n    ...state,\n    disabled\n  }), [state, disabled]);\n  const element = useRenderElement('button', componentProps, {\n    ref: [forwardedRef, buttonRef],\n    state: buttonState,\n    props: [props, elementProps, getButtonProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldDecrement.displayName = \"NumberFieldDecrement\";", "'use client';\n\nimport * as React from 'react';\nimport { useIsoLayoutEffect } from '@base-ui-components/utils/useIsoLayoutEffect';\nimport { stopEvent } from \"../../floating-ui-react/utils.js\";\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { useFieldRootContext } from \"../../field/root/FieldRootContext.js\";\nimport { useFieldControlValidation } from \"../../field/control/useFieldControlValidation.js\";\nimport { fieldValidityMapping } from \"../../field/utils/constants.js\";\nimport { DEFAULT_STEP } from \"../utils/constants.js\";\nimport { ARABIC_RE, HAN_RE, getNumberLocaleDetails, parseNumber } from \"../utils/parse.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { useField } from \"../../field/useField.js\";\nimport { useFormContext } from \"../../form/FormContext.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { formatNumber, formatNumberMaxPrecision } from \"../../utils/formatNumber.js\";\nconst customStyleHookMapping = {\n  ...fieldValidityMapping,\n  ...styleHookMapping\n};\nconst NAVIGATE_KEYS = new Set(['Backspace', 'Delete', 'ArrowLeft', 'ArrowRight', 'Tab', 'Enter', 'Escape']);\n\n/**\n * The native input control in the number field.\n * Renders an `<input>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldInput = /*#__PURE__*/React.forwardRef(function NumberFieldInput(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    ...elementProps\n  } = componentProps;\n  const {\n    allowInputSyncRef,\n    disabled,\n    formatOptionsRef,\n    getAllowedNonNumericKeys,\n    getStepAmount,\n    id,\n    incrementValue,\n    inputMode,\n    inputValue,\n    max,\n    min,\n    name,\n    readOnly,\n    required,\n    setValue,\n    state,\n    setInputValue,\n    locale,\n    inputRef,\n    value\n  } = useNumberFieldRootContext();\n  const {\n    clearErrors\n  } = useFormContext();\n  const {\n    labelId,\n    validationMode,\n    setTouched,\n    setFocused,\n    invalid\n  } = useFieldRootContext();\n  const {\n    getInputValidationProps,\n    getValidationProps,\n    commitValidation,\n    inputRef: inputValidationRef\n  } = useFieldControlValidation();\n  const hasTouchedInputRef = React.useRef(false);\n  const blockRevalidationRef = React.useRef(false);\n  useField({\n    id,\n    commitValidation,\n    value,\n    controlRef: inputRef,\n    name,\n    getValue: () => value ?? null\n  });\n  const prevValueRef = React.useRef(value);\n  const prevInputValueRef = React.useRef(inputValue);\n  useIsoLayoutEffect(() => {\n    if (prevValueRef.current === value && prevInputValueRef.current === inputValue) {\n      return;\n    }\n    clearErrors(name);\n    if (validationMode === 'onChange') {\n      commitValidation(value);\n    }\n  }, [value, inputValue, name, clearErrors, validationMode, commitValidation]);\n  useIsoLayoutEffect(() => {\n    if (prevValueRef.current === value || validationMode === 'onChange') {\n      return;\n    }\n    if (blockRevalidationRef.current) {\n      blockRevalidationRef.current = false;\n      return;\n    }\n    commitValidation(value, true);\n  }, [commitValidation, validationMode, value]);\n  useIsoLayoutEffect(() => {\n    prevValueRef.current = value;\n    prevInputValueRef.current = inputValue;\n  }, [value, inputValue]);\n  const inputProps = {\n    id,\n    required,\n    disabled,\n    readOnly,\n    inputMode,\n    value: inputValue,\n    type: 'text',\n    autoComplete: 'off',\n    autoCorrect: 'off',\n    spellCheck: 'false',\n    'aria-roledescription': 'Number field',\n    'aria-invalid': invalid || undefined,\n    'aria-labelledby': labelId,\n    // If the server's locale does not match the client's locale, the formatting may not match,\n    // causing a hydration mismatch.\n    suppressHydrationWarning: true,\n    onFocus(event) {\n      if (event.defaultPrevented || readOnly || disabled || hasTouchedInputRef.current) {\n        return;\n      }\n      hasTouchedInputRef.current = true;\n      setFocused(true);\n\n      // Browsers set selection at the start of the input field by default. We want to set it at\n      // the end for the first focus.\n      const target = event.currentTarget;\n      const length = target.value.length;\n      target.setSelectionRange(length, length);\n    },\n    onBlur(event) {\n      if (event.defaultPrevented || readOnly || disabled) {\n        return;\n      }\n      setTouched(true);\n      setFocused(false);\n      allowInputSyncRef.current = true;\n      if (inputValue.trim() === '') {\n        setValue(null);\n        if (validationMode === 'onBlur') {\n          commitValidation(null);\n        }\n        return;\n      }\n      const formatOptions = formatOptionsRef.current;\n      const parsedValue = parseNumber(inputValue, locale, formatOptions);\n      const canonicalText = formatNumber(parsedValue, locale, formatOptions);\n      const maxPrecisionText = formatNumberMaxPrecision(parsedValue, locale, formatOptions);\n      const canonical = parseNumber(canonicalText, locale, formatOptions);\n      const maxPrecision = parseNumber(maxPrecisionText, locale, formatOptions);\n      if (parsedValue === null) {\n        return;\n      }\n      blockRevalidationRef.current = true;\n      if (validationMode === 'onBlur') {\n        commitValidation(canonical);\n      }\n      const hasExplicitPrecision = formatOptions?.maximumFractionDigits != null || formatOptions?.minimumFractionDigits != null;\n      if (hasExplicitPrecision) {\n        // When the consumer explicitly requests a precision, always round the number to that\n        // precision and normalize the displayed text accordingly.\n        if (value !== canonical) {\n          setValue(canonical, event.nativeEvent);\n        }\n        if (inputValue !== canonicalText) {\n          setInputValue(canonicalText);\n        }\n      } else if (value !== maxPrecision) {\n        // Default behaviour: preserve max precision until it differs from canonical\n        setValue(canonical, event.nativeEvent);\n      } else {\n        const shouldPreserveFullPrecision = parsedValue === value && inputValue === maxPrecisionText;\n        if (!shouldPreserveFullPrecision && inputValue !== canonicalText) {\n          setInputValue(canonicalText);\n        }\n      }\n    },\n    onChange(event) {\n      // Workaround for https://github.com/facebook/react/issues/9023\n      if (event.nativeEvent.defaultPrevented) {\n        return;\n      }\n      allowInputSyncRef.current = false;\n      const targetValue = event.target.value;\n      if (targetValue.trim() === '') {\n        setInputValue(targetValue);\n        setValue(null, event.nativeEvent);\n        return;\n      }\n      if (event.isTrusted) {\n        setInputValue(targetValue);\n        return;\n      }\n      const parsedValue = parseNumber(targetValue, locale, formatOptionsRef.current);\n      if (parsedValue !== null) {\n        setInputValue(targetValue);\n        setValue(parsedValue, event.nativeEvent);\n      }\n    },\n    onKeyDown(event) {\n      if (event.defaultPrevented || readOnly || disabled) {\n        return;\n      }\n      const nativeEvent = event.nativeEvent;\n      allowInputSyncRef.current = true;\n      const allowedNonNumericKeys = getAllowedNonNumericKeys();\n      let isAllowedNonNumericKey = allowedNonNumericKeys.has(event.key);\n      const {\n        decimal,\n        currency,\n        percentSign\n      } = getNumberLocaleDetails([], formatOptionsRef.current);\n      const selectionStart = event.currentTarget.selectionStart;\n      const selectionEnd = event.currentTarget.selectionEnd;\n      const isAllSelected = selectionStart === 0 && selectionEnd === inputValue.length;\n\n      // Allow the minus key only if there isn't already a plus or minus sign, or if all the text\n      // is selected, or if only the minus sign is highlighted.\n      if (event.key === '-' && allowedNonNumericKeys.has('-')) {\n        const isMinusHighlighted = selectionStart === 0 && selectionEnd === 1 && inputValue[0] === '-';\n        isAllowedNonNumericKey = !inputValue.includes('-') || isAllSelected || isMinusHighlighted;\n      }\n\n      // Only allow one of each symbol.\n      [decimal, currency, percentSign].forEach(symbol => {\n        if (event.key === symbol) {\n          const symbolIndex = inputValue.indexOf(symbol);\n          const isSymbolHighlighted = selectionStart === symbolIndex && selectionEnd === symbolIndex + 1;\n          isAllowedNonNumericKey = !inputValue.includes(symbol) || isAllSelected || isSymbolHighlighted;\n        }\n      });\n      const isLatinNumeral = /^[0-9]$/.test(event.key);\n      const isArabicNumeral = ARABIC_RE.test(event.key);\n      const isHanNumeral = HAN_RE.test(event.key);\n      const isNavigateKey = NAVIGATE_KEYS.has(event.key);\n      if (\n      // Allow composition events (e.g., pinyin)\n      // event.nativeEvent.isComposing does not work in Safari:\n      // https://bugs.webkit.org/show_bug.cgi?id=165004\n      event.which === 229 || event.altKey || event.ctrlKey || event.metaKey || isAllowedNonNumericKey || isLatinNumeral || isArabicNumeral || isHanNumeral || isNavigateKey) {\n        return;\n      }\n\n      // We need to commit the number at this point if the input hasn't been blurred.\n      const parsedValue = parseNumber(inputValue, locale, formatOptionsRef.current);\n      const amount = getStepAmount(event) ?? DEFAULT_STEP;\n\n      // Prevent insertion of text or caret from moving.\n      stopEvent(event);\n      if (event.key === 'ArrowUp') {\n        incrementValue(amount, 1, parsedValue, nativeEvent);\n      } else if (event.key === 'ArrowDown') {\n        incrementValue(amount, -1, parsedValue, nativeEvent);\n      } else if (event.key === 'Home' && min != null) {\n        setValue(min, nativeEvent);\n      } else if (event.key === 'End' && max != null) {\n        setValue(max, nativeEvent);\n      }\n    },\n    onPaste(event) {\n      if (event.defaultPrevented || readOnly || disabled) {\n        return;\n      }\n\n      // Prevent `onChange` from being called.\n      event.preventDefault();\n      const clipboardData = event.clipboardData || window.Clipboard;\n      const pastedData = clipboardData.getData('text/plain');\n      const parsedValue = parseNumber(pastedData, locale, formatOptionsRef.current);\n      if (parsedValue !== null) {\n        allowInputSyncRef.current = false;\n        setValue(parsedValue, event.nativeEvent);\n        setInputValue(pastedData);\n      }\n    }\n  };\n  const element = useRenderElement('input', componentProps, {\n    ref: [forwardedRef, inputRef, inputValidationRef],\n    state,\n    props: [inputProps, getInputValidationProps(), getValidationProps(), elementProps],\n    customStyleHookMapping\n  });\n  return element;\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldInput.displayName = \"NumberFieldInput\";", "'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ownerWindow, ownerDocument } from '@base-ui-components/utils/owner';\nimport { isWebKit } from '@base-ui-components/utils/detectBrowser';\nimport { useLatestRef } from '@base-ui-components/utils/useLatestRef';\nimport { useEventCallback } from '@base-ui-components/utils/useEventCallback';\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { NumberFieldScrubAreaContext } from \"./NumberFieldScrubAreaContext.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\nimport { getViewportRect } from \"../utils/getViewportRect.js\";\nimport { subscribeToVisualViewportResize } from \"../utils/subscribeToVisualViewportResize.js\";\nimport { DEFAULT_STEP } from \"../utils/constants.js\";\n\n/**\n * An interactive area where the user can click and drag to change the field value.\n * Renders a `<span>` element.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const NumberFieldScrubArea = /*#__PURE__*/React.forwardRef(function NumberFieldScrubArea(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    direction = 'horizontal',\n    pixelSensitivity = 2,\n    teleportDistance,\n    ...elementProps\n  } = componentProps;\n  const {\n    state\n  } = useNumberFieldRootContext();\n  const {\n    isScrubbing,\n    setIsScrubbing,\n    disabled,\n    readOnly,\n    value,\n    inputRef,\n    incrementValue,\n    getStepAmount\n  } = useNumberFieldRootContext();\n  const latestValueRef = useLatestRef(value);\n  const scrubAreaRef = React.useRef(null);\n  const isScrubbingRef = React.useRef(false);\n  const scrubAreaCursorRef = React.useRef(null);\n  const virtualCursorCoords = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const visualScaleRef = React.useRef(1);\n  const [isTouchInput, setIsTouchInput] = React.useState(false);\n  const [isPointerLockDenied, setIsPointerLockDenied] = React.useState(false);\n  React.useEffect(() => {\n    if (!isScrubbing || !scrubAreaCursorRef.current) {\n      return undefined;\n    }\n    return subscribeToVisualViewportResize(scrubAreaCursorRef.current, visualScaleRef);\n  }, [isScrubbing]);\n  const updateCursorTransform = useEventCallback((x, y) => {\n    if (scrubAreaCursorRef.current) {\n      scrubAreaCursorRef.current.style.transform = `translate3d(${x}px,${y}px,0) scale(${1 / visualScaleRef.current})`;\n    }\n  });\n  const onScrub = React.useCallback(({\n    movementX,\n    movementY\n  }) => {\n    const virtualCursor = scrubAreaCursorRef.current;\n    const scrubAreaEl = scrubAreaRef.current;\n    if (!virtualCursor || !scrubAreaEl) {\n      return;\n    }\n    const rect = getViewportRect(teleportDistance, scrubAreaEl);\n    const coords = virtualCursorCoords.current;\n    const newCoords = {\n      x: Math.round(coords.x + movementX),\n      y: Math.round(coords.y + movementY)\n    };\n    const cursorWidth = virtualCursor.offsetWidth;\n    const cursorHeight = virtualCursor.offsetHeight;\n    if (newCoords.x + cursorWidth / 2 < rect.x) {\n      newCoords.x = rect.width - cursorWidth / 2;\n    } else if (newCoords.x + cursorWidth / 2 > rect.width) {\n      newCoords.x = rect.x - cursorWidth / 2;\n    }\n    if (newCoords.y + cursorHeight / 2 < rect.y) {\n      newCoords.y = rect.height - cursorHeight / 2;\n    } else if (newCoords.y + cursorHeight / 2 > rect.height) {\n      newCoords.y = rect.y - cursorHeight / 2;\n    }\n    virtualCursorCoords.current = newCoords;\n    updateCursorTransform(newCoords.x, newCoords.y);\n  }, [teleportDistance, updateCursorTransform]);\n  const onScrubbingChange = React.useCallback((scrubbingValue, {\n    clientX,\n    clientY\n  }) => {\n    ReactDOM.flushSync(() => {\n      setIsScrubbing(scrubbingValue);\n    });\n    const virtualCursor = scrubAreaCursorRef.current;\n    if (!virtualCursor || !scrubbingValue) {\n      return;\n    }\n    const initialCoords = {\n      x: clientX - virtualCursor.offsetWidth / 2,\n      y: clientY - virtualCursor.offsetHeight / 2\n    };\n    virtualCursorCoords.current = initialCoords;\n    updateCursorTransform(initialCoords.x, initialCoords.y);\n  }, [setIsScrubbing, updateCursorTransform]);\n  React.useEffect(function registerGlobalScrubbingEventListeners() {\n    if (!inputRef.current || disabled || readOnly) {\n      return undefined;\n    }\n    let cumulativeDelta = 0;\n    function handleScrubPointerUp(event) {\n      try {\n        // Avoid errors in testing environments.\n        ownerDocument(scrubAreaRef.current).exitPointerLock();\n      } catch {\n        //\n      } finally {\n        isScrubbingRef.current = false;\n        onScrubbingChange(false, event);\n      }\n    }\n    function handleScrubPointerMove(event) {\n      if (!isScrubbingRef.current) {\n        return;\n      }\n\n      // Prevent text selection.\n      event.preventDefault();\n      onScrub(event);\n      const {\n        movementX,\n        movementY\n      } = event;\n      cumulativeDelta += direction === 'vertical' ? movementY : movementX;\n      if (Math.abs(cumulativeDelta) >= pixelSensitivity) {\n        cumulativeDelta = 0;\n        const dValue = direction === 'vertical' ? -movementY : movementX;\n        incrementValue(dValue * (getStepAmount(event) ?? DEFAULT_STEP), 1);\n      }\n    }\n    const win = ownerWindow(inputRef.current);\n    win.addEventListener('pointerup', handleScrubPointerUp, true);\n    win.addEventListener('pointermove', handleScrubPointerMove, true);\n    return () => {\n      win.removeEventListener('pointerup', handleScrubPointerUp, true);\n      win.removeEventListener('pointermove', handleScrubPointerMove, true);\n    };\n  }, [disabled, readOnly, incrementValue, latestValueRef, getStepAmount, inputRef, onScrubbingChange, onScrub, direction, pixelSensitivity]);\n\n  // Prevent scrolling using touch input when scrubbing.\n  React.useEffect(function registerScrubberTouchPreventListener() {\n    const element = scrubAreaRef.current;\n    if (!element || disabled || readOnly) {\n      return undefined;\n    }\n    function handleTouchStart(event) {\n      if (event.touches.length === 1) {\n        event.preventDefault();\n      }\n    }\n    element.addEventListener('touchstart', handleTouchStart);\n    return () => {\n      element.removeEventListener('touchstart', handleTouchStart);\n    };\n  }, [disabled, readOnly]);\n  const defaultProps = {\n    role: 'presentation',\n    style: {\n      touchAction: 'none',\n      WebkitUserSelect: 'none',\n      userSelect: 'none'\n    },\n    async onPointerDown(event) {\n      const isMainButton = !event.button || event.button === 0;\n      if (event.defaultPrevented || readOnly || !isMainButton || disabled) {\n        return;\n      }\n      const isTouch = event.pointerType === 'touch';\n      setIsTouchInput(isTouch);\n      if (event.pointerType === 'mouse') {\n        event.preventDefault();\n        inputRef.current?.focus();\n      }\n      isScrubbingRef.current = true;\n      onScrubbingChange(true, event.nativeEvent);\n\n      // WebKit causes significant layout shift with the native message, so we can't use it.\n      if (!isTouch && !isWebKit) {\n        try {\n          // Avoid non-deterministic errors in testing environments. This error sometimes\n          // appears:\n          // \"The root document of this element is not valid for pointer lock.\"\n          await ownerDocument(scrubAreaRef.current).body.requestPointerLock();\n          setIsPointerLockDenied(false);\n        } catch (error) {\n          setIsPointerLockDenied(true);\n        } finally {\n          ReactDOM.flushSync(() => {\n            onScrubbingChange(true, event.nativeEvent);\n          });\n        }\n      }\n    }\n  };\n  const element = useRenderElement('span', componentProps, {\n    ref: [forwardedRef, scrubAreaRef],\n    state,\n    props: [defaultProps, elementProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  const contextValue = React.useMemo(() => ({\n    isScrubbing,\n    isTouchInput,\n    isPointerLockDenied,\n    scrubAreaCursorRef,\n    scrubAreaRef,\n    direction,\n    pixelSensitivity,\n    teleportDistance\n  }), [isScrubbing, isTouchInput, isPointerLockDenied, direction, pixelSensitivity, teleportDistance]);\n  return /*#__PURE__*/_jsx(NumberFieldScrubAreaContext.Provider, {\n    value: contextValue,\n    children: element\n  });\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldScrubArea.displayName = \"NumberFieldScrubArea\";", "import * as React from 'react';\nexport const NumberFieldScrubAreaContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== \"production\") NumberFieldScrubAreaContext.displayName = \"NumberFieldScrubAreaContext\";\nexport function useNumberFieldScrubAreaContext() {\n  const context = React.useContext(NumberFieldScrubAreaContext);\n  if (context === undefined) {\n    throw new Error('Base UI: NumberFieldScrubAreaContext is missing. NumberFieldScrubArea parts must be placed within <NumberField.ScrubArea>.');\n  }\n  return context;\n}", "import { ownerWindow } from '@base-ui-components/utils/owner';\n\n// Calculates the viewport rect for the virtual cursor.\nexport function getViewportRect(teleportDistance, scrubAreaEl) {\n  const win = ownerWindow(scrubAreaEl);\n  const rect = scrubAreaEl.getBoundingClientRect();\n  if (rect && teleportDistance != null) {\n    return {\n      x: rect.left - teleportDistance / 2,\n      y: rect.top - teleportDistance / 2,\n      width: rect.right + teleportDistance / 2,\n      height: rect.bottom + teleportDistance / 2\n    };\n  }\n  const vV = win.visualViewport;\n  if (vV) {\n    return {\n      x: vV.offsetLeft,\n      y: vV.offsetTop,\n      width: vV.offsetLeft + vV.width,\n      height: vV.offsetTop + vV.height\n    };\n  }\n  return {\n    x: 0,\n    y: 0,\n    width: win.document.documentElement.clientWidth,\n    height: win.document.documentElement.clientHeight\n  };\n}", "import { ownerWindow } from '@base-ui-components/utils/owner';\n\n// This lets us invert the scale of the cursor to match the OS scale, in which the cursor doesn't\n// scale with the content on pinch-zoom.\nexport function subscribeToVisualViewportResize(element, visualScaleRef) {\n  const vV = ownerWindow(element).visualViewport;\n  if (!vV) {\n    return () => {};\n  }\n  function handleVisualResize() {\n    if (vV) {\n      visualScaleRef.current = vV.scale;\n    }\n  }\n  handleVisualResize();\n  vV.addEventListener('resize', handleVisualResize);\n  return () => {\n    vV.removeEventListener('resize', handleVisualResize);\n  };\n}", "'use client';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { isWebKit } from '@base-ui-components/utils/detectBrowser';\nimport { ownerDocument } from '@base-ui-components/utils/owner';\nimport { useNumberFieldRootContext } from \"../root/NumberFieldRootContext.js\";\nimport { styleHookMapping } from \"../utils/styleHooks.js\";\nimport { useNumberFieldScrubAreaContext } from \"../scrub-area/NumberFieldScrubAreaContext.js\";\nimport { useRenderElement } from \"../../utils/useRenderElement.js\";\n\n/**\n * A custom element to display instead of the native cursor while using the scrub area.\n * Renders a `<span>` element.\n *\n * This component uses the [Pointer Lock API](https://developer.mozilla.org/en-US/docs/Web/API/Pointer_Lock_API), which may prompt the browser to display a related notification. It is disabled\n * in Safari to avoid a layout shift that this notification causes there.\n *\n * Documentation: [Base UI Number Field](https://base-ui.com/react/components/number-field)\n */\nexport const NumberFieldScrubAreaCursor = /*#__PURE__*/React.forwardRef(function NumberFieldScrubAreaCursor(componentProps, forwardedRef) {\n  const {\n    render,\n    className,\n    ...elementProps\n  } = componentProps;\n  const {\n    state\n  } = useNumberFieldRootContext();\n  const {\n    isScrubbing,\n    isTouchInput,\n    isPointerLockDenied,\n    scrubAreaCursorRef\n  } = useNumberFieldScrubAreaContext();\n  const [domElement, setDomElement] = React.useState(null);\n  const shouldRender = isScrubbing && !isWebKit && !isTouchInput && !isPointerLockDenied;\n  const element = useRenderElement('span', componentProps, {\n    enabled: shouldRender,\n    ref: [forwardedRef, scrubAreaCursorRef, setDomElement],\n    state,\n    props: [{\n      role: 'presentation',\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        pointerEvents: 'none'\n      }\n    }, elementProps],\n    customStyleHookMapping: styleHookMapping\n  });\n  return element && /*#__PURE__*/ReactDOM.createPortal(element, ownerDocument(domElement).body);\n});\nif (process.env.NODE_ENV !== \"production\") NumberFieldScrubAreaCursor.displayName = \"NumberFieldScrubAreaCursor\";"],
  "mappings": "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",
  "names": ["React", "React", "NumberFieldRoot", "element", "_jsxs", "_jsx", "React", "NumberFieldGroup", "React", "React", "React", "React", "React", "NumberFieldIncrement", "React", "NumberFieldDecrement", "React", "NumberFieldInput", "React", "React", "import_jsx_runtime", "NumberFieldScrubArea", "element", "error", "_jsx", "React", "ReactDOM", "NumberFieldScrubAreaCursor"]
}
